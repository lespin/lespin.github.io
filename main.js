/*! For license information please see main.js.LICENSE.txt */
!function(n){var e={};function t(a){if(e[a])return e[a].exports;var o=e[a]={i:a,l:!1,exports:{}};return n[a].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=n,t.c=e,t.d=function(n,e,a){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:a})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var o in n)t.d(a,o,function(e){return n[e]}.bind(null,o));return a},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=18)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ms", function() { return ms; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sample1", function() { return sample1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ftok", function() { return ftok; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ktof", function() { return ktof; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "itrvstot", function() { return itrvstot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ap", function() { return ap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "apGain", function() { return apGain; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "apFrequency", function() { return apFrequency; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "apQ", function() { return apQ; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "apPlaybackRate", function() { return apPlaybackRate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "apDelayTime", function() { return apDelayTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "apDetune", function() { return apDetune; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linearRampToValueAtTime", function() { return linearRampToValueAtTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setValueAtTime", function() { return setValueAtTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setValueNow", function() { return setValueNow; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FftFreqs", function() { return FftFreqs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "adsr", function() { return adsr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asr", function() { return asr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DelayChain", function() { return DelayChain; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "periodWaveFromKeys", function() { return periodWaveFromKeys; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MonoBuffer", function() { return MonoBuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NoiseBuffer", function() { return NoiseBuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScratchBuffer", function() { return ScratchBuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Square01Buffer", function() { return Square01Buffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "playBuffer", function() { return playBuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GlobalGain", function() { return GlobalGain; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Record", function() { return Record; });\nfunction ms(ms){ return ms / 1000 }\nfunction sample1(sr){ return function( s ){ return s/sr } }\nfunction ftok( f ){\n    return 69 + 12 * Math.log2( f / 440 )\n}\nfunction ktof( k ) {\n    return Math.pow(2,(k-69)/12) * 440\n}\nfunction itrvstot( itrvs, t0 ){\n    return itrvs.reduce( (r,x) => {\n        return [ ...r, r[r.length-1] + x ]\n    },[t0])\n}\n/*\nconst linearRampToValueAtTime = p => n => (v,t) => n[p].linearRampToValueAtTime(v,t)\nconst setValueAtTime = p => n => (v,t) => n[p].setValueAtTime(v,t)\n\nconst gainLinearRampToValueAtTime = linearRampToValueAtTime(\'gain\')\nconst frequencyLinearRampToValueAtTime = linearRampToValueAtTime(\'frequency\')\nconst QLinearRampToValueAtTime = linearRampToValueAtTime(\'Q\')\n\nconst gainSetValueAtTime = setValueAtTime(\'gain\')\nconst frequencySetValueAtTime = setValueAtTime(\'frequency\')\nconst QSetValueAtTime = setValueAtTime(\'Q\')\n*/\nconst ap = name => node => node[name]\nconst apGain = ap(\'gain\')\nconst apFrequency = ap(\'frequency\')\nconst apQ = ap(\'Q\')\nconst apPlaybackRate = ap(\'playbackRate\')\nconst apDelayTime = ap(\'delayTime\')\nconst apDetune = ap(\'detune\')\n\nconst linearRampToValueAtTime = ap => (v,t) => ap.linearRampToValueAtTime(v,t)\nconst setValueAtTime = ap => (v,t) => ap.linearRampToValueAtTime(v,t)\nconst setValueNow = ap => v => ap.value = v\n/*\nconst node = createOscillator()\nsetValueAtTime( apQ( node ) )( v, t)\nsetValue( apQ( node ) )( v )\n*/\n//gainLinearRampToValueAtTime( node )( v, t )\n    \n/*\nconst node = ctx.createGain()\nsetValueAtTime( node, \'gain\', v, t )\n*/\n\nfunction FftFreqs(size,f0){\n    // relation between frequency, midi key and fft bins\n    const bins = new Array( size )\n    {\n        let f = f0\n        for ( let b = 0 ; b < size ; b++ ){\n            const f = b * f0,\n                  k = ftok(f)\n            bins[ b ] = { f,k,i:b }\n        }\n    }\n    const _nbcache = {}\n    function nearestBins( k ){\n        if ( _nbcache[ k ] === undefined ){\n            _nbcache[ k ] = [...bins].sort( (b1,b2) => {\n                const k1 = b1.k,\n                      k2 = b2.k\n                return Math.abs(k1-k) - Math.abs(k2-k)\n            })\n        }\n        return _nbcache[ k ]\n    }\n    return { size, f0, bins, nearestBins }\n}\n\n// enveloppes\nfunction adsr( ap, { values, durations }, t ){\n    //     adsr              gain\n    //      o                0\n    //     o ooo             1\n    // 0_ o     o  _0\n    //\n    //      ad sr\n    //    0 12 3 4\n    const times = itrvstot( durations, t )\n    /*\n    ap.setValueAtTime(0, times[0] )        \n    ap.linearRampToValueAtTime( values[0], times[1] )\n    ap.linearRampToValueAtTime( values[1], times[2] )\n    ap.linearRampToValueAtTime( values[1], times[3] )\n    ap.linearRampToValueAtTime( 0, times[4] )\n    */\n    const s = setValueAtTime(ap),\n          l = linearRampToValueAtTime(ap)\n    \n    s(0, times[0] )        \n    l( values[0], times[1] )\n    l( values[1], times[2] )\n    l( values[1], times[3] )\n    l( 0, times[4] )\n    \n    return times[4]\n}\nfunction asr( ap, { values, durations }, t ){\n    //   a    s   r          gain\n    //       oooo            1\n    //     oo    o           0\n    // 1_ o       o _ 1       1\n    //\n    //    0  1  2 3    \n    const times = itrvstot( durations, t )\n    const s = setValueAtTime(ap),\n          l = linearRampToValueAtTime(ap)\n    /*\n    if ( times[0] === times[1] ){\n        ap.setValueAtTime( values[0], times[1] )\n    } else { \n        ap.setValueAtTime( 1, times[0] )\n        ap.linearRampToValueAtTime( values[0], times[1] )\n    }\n    ap.linearRampToValueAtTime( values[1], times[2])\n    if ( times[2] === times[3] ){\n    } else {\n        ap.linearRampToValueAtTime( 1, times[3])\n        }*/\n    \n    if ( times[0] === times[1] ){\n        s( values[0], times[1] )\n    } else { \n        s( 1, times[0] )\n        l( values[0], times[1] )\n    }\n    l( values[1], times[2])\n    if ( times[2] === times[3] ){\n    } else {\n        l( 1, times[3])\n    }\n    return times[3]            \n}\nfunction DelayChain( ac, ds  ){\n    const nodes = []\n    for ( let i = 0 ; i < ds.length ; i++ ){\n        const gn = ac.createGain(),\n              dn = ac.createDelay()\n        gn.gain.value = ds[ i ][1]\n        dn.delayTime.value = ds[ i ][0]\n        gn.connect( dn )\n        if ( i > 0 ){\n            nodes[ nodes.length - 1 ].connect( gn )\n        }\n        nodes.push( gn, dn )\n    }\n    const input = nodes[0],\n          output = nodes[nodes.length-1]\n    output.connect( input )\n    return { input, output  }\n}\nfunction periodWaveFromKeys( ac, chord, { size, nearestBins } ){\n    const real = new Float32Array(size)\n    const imag = new Float32Array(size)\n    chord.forEach( k => {\n        const [nearest] = nearestBins( k )\n        real[nearest.i] = 0.5\n    })\n    return ac.createPeriodicWave(real, imag, {disableNormalization: true});\n}\n\nfunction MonoBuffer( f ){\n    return function(ac, length){\n        const bs = ac.sampleRate * length,\n              ab = ac.createBuffer(1, bs, ac.sampleRate),\n              cd = ab.getChannelData(0)\n        for (let i = 0; i < bs; i++)\n            cd[i] = f(i,bs)   \n        return ab\n    }\n}\nconst NoiseBuffer = MonoBuffer( i => Math.random() * 2 - 1 )\nconst ScratchBuffer = MonoBuffer( i => ( Math.random() > 0.985 )?1:0 )\nconst Square01Buffer = MonoBuffer( (i,l) => ( i < ( l / 2 ))?0:1 )\n/*\nexport function NoiseBuffer2(ac, length=0.25){\n    const bs = ac.sampleRate * length,\n          ab =  ac.createBuffer(1, bs, ac.sampleRate),\n          cd  = ab.getChannelData(0)\n    for (let i = 0; i < bs; i++) {\n        cd[i] = Math.random() * 2 - 1;\n    }\n    return ab\n}\n\nexport function ScratchBuffer2(ac, length=0.25){\n    const bs = ac.sampleRate * length,\n          ab =  ac.createBuffer(1, bs, ac.sampleRate),\n          cd  = ab.getChannelData(0)\n    for (let i = 0; i < bs; i++) {\n        if ( Math.random() > 0.985 ){\n            cd[ i ] = 1\n        } else {\n            cd[i] = 0\n        }\n    }\n    return ab\n}\nexport function Square01Buffer2( ac, length ){\n    const bs = ac.sampleRate * length,\n          hbs = bs / 2,\n          ab =  ac.createBuffer(1, bs, ac.sampleRate),\n          cd  = ab.getChannelData(0)\n    for (let i = 0; i < hbs ; i++) {\n        cd[i] = 0\n    }\n     for (let i = hbs; i < bs ; i++) {\n        cd[i] = 1\n    } \n    return ab    \n}\n*/\nfunction playBuffer( ac, b, d, t, loop = false ){\n    const source = ac.createBufferSource();\n    source.buffer = b;\n    source.connect(d);\n    source.loop = loop\n    source.start(t);\n    return source;    \n}\nfunction GlobalGain( ac ){\n    const g = ac.createGain()\n    //    g.connect( ac.destination )\n    g.gain.value = 0\n    return g \n}\nfunction Record( channels, length, sampleRate, setup, ondone, onprogress ){\n    onprogress(0)\n    const fwac = new OfflineAudioContext(channels,length,sampleRate)\n    const intv = setInterval( () => {\n        onprogress( fwac.currentTime / length * sampleRate )\n    },1000)\n    setup( fwac )\n    fwac.startRendering().then( b => {\n        clearInterval( intv )\n        onprogress(1)\n        ondone(b)\n    })\n}\n//Record()\n\n\n//# sourceURL=webpack:///./src/audio/webaudioUtils.js?')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "V2", function() { return V2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cloneV2", function() { return cloneV2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copyV2", function() { return copyV2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subV2", function() { return subV2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addV2", function() { return addV2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divScalar", function() { return divScalar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multScalar", function() { return multScalar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lerpV2", function() { return lerpV2; });\nfunction V2(x,y){ return {x,y} }\nfunction cloneV2({x,y}){ return V2(x,y) }\nfunction copyV2(v,t){\n    t.x = v.x\n    t.y = v.y\n    return t\n}\nfunction subV2(v1,v2,t=V2()){\n    t.x = v1.x - v2.x\n    t.y = v1.y - v2.y\n    return t\n}\nfunction addV2(v1,v2,t=V2()){\n    t.x = v1.x + v2.x\n    t.y = v1.y + v2.y\n    return t\n}\nfunction divScalar(v1,a,t=V2()){\n    t.x = v1.x / a\n    t.y = v1.y / a\n    return t\n}\nfunction multScalar(v1,a,t=V2()){\n    t.x = v1.x * a\n    t.y = v1.y * a\n    return t\n}\nfunction lerpV2(v1,v2,a,t=V2()){\n    t.x = (1-a) * v1.x + a * v2.x\n    t.y = (1-a) * v1.y + a * v2.y\n}\n/*\nfunction clamp(x,min,max){\n    return Math.max( min, Math.min( x, max ) )\n}\nexport function clampV2(v,min,max,t=V2()){\n    t.x = clamp( v.x, min.x, max.x )\n    t.y = clamp( v.y, min.y, max.y )\n    return t\n}\nexport function floorV2(v,t=V2()){\n    t.x = Math.floor( v.x )\n    t.y = Math.floor( v.y )\n    return t\n}\nexport function ceilV2(v,t=V2()){\n    t.x = Math.ceil( v.x )\n    t.y = Math.ceil( v.y )\n    return t\n}\n*/\n\n\n//# sourceURL=webpack:///./src/maths/v2.js?')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lerp", function() { return lerp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clamp", function() { return clamp; });\nfunction lerp(a,b,p){ return ( 1 - p ) * a + p * b }\nfunction clamp(x,min,max){ return Math.max(min,Math.min(x,max)) }\n\n\n//# sourceURL=webpack:///./src/maths/v1.js?')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Missions\", function() { return Missions; });\n// level :\n// width, height, mainBranchesCount, path\n// [0000000000000000000000000000000000000000000000000001]\n// [0000000000000000000000001000000000000000000000000000]\n\nconst levelIntro = () => ({\n    name : 'Introduction',\n    level : [400,30,2,[0,0,0,1,1,1,1]]\n})\n// export const Missions = [{\n//     name : 'test',\n//     hs : [0.5,1],\n//     subs : [{\n//         name : 'popo1',\n//         level : [300,30,2,[0,0]], // nice, challening for beginner\n//     }]\n// }]\n\nconst Missions = [{\n    name : 'test',\n    //    hs : [0,1],\n    hs : [0.5,1],\n    subs : [{\n        name : 'popo 0.5',\n        spd : 0.75,\n        level : [300,30,2,[0,1,0,1,0,1]], // nice, challening for beginner\n    },{\n        name : 'popo 0.5',\n        spd : 0.75,\n        level : [300,30,2,[0,1,0,1,0,1]], // nice, challening for beginner\n    },{\n        name : 'popo 0.75',\n        spd : 0.75,\n        level : [300,30,2,[0,1,0,1,0,1]], // nice, challening for beginner\n    },{\n        name : 'popo 1',\n        spd : 1,\n        level : [300,30,2,[0,1,0,1,0,1]], // nice, challening for beginner\n//        level : [5000,30,1,[0,0,0,0]], \n        //level : [500,30,2,[0,0,1,1,1,0,0]], // ??\n        // level : [500,100,2,[0,0,1,1,1,0,0]] // challening for beginner\n    }]\n},{\n    name : 'Cable Worker',\n    subs : [{\n        name : 'Stay Still!',\n        level : [500,100,1,[0,0,0,0,0,0,0,0,0]]\n    },{\n        name : 'Bad Ideas!',\n        level : [500,100,2,[0,0,0,0,0,0,0,0,0]]\n    },{\n        name : 'Control yourself',\n        level : [400,30,2,[0,0,0,1,1,1,1]]\n    }]\n},{\n    name : 'Printing is a simple task',\n    subs : [\n        levelIntro(),\n        {\n            name : 'Reach for the printer',\n            succes : 'the printer seems to refuse the packet...',\n            level : [400*3,30,3,[0,1,2,0,1,2,0,1,2]]\n        },{\n            name : 'Damn printer!',\n            succes : 'the printer was out of paper',\n            level : [200*3,30,3,[0,1,2,0,1,2,0,1,2]]\n        },{\n            name : 'Now we are printing',\n            succes : 'the warm noise of the printer suits your electron ears',\n            level : [100*3,30,3,[0,1,2,0,1,2,0,1,2]]\n        }]\n},{\n    name : 'The space transmission',\n    subs : [\n        levelIntro(),\n        {\n        name : 'from the home to wide area network',\n        level : [400*3,40,4,[0,0,0,4,1,2,0,1,2,0,4,1,2]]\n    },{\n        name : 'in the wide area',\n    },{\n        name : 'reaching the server'\n    },{\n        name : ''\n    }]\n},{\n    name : 'A Journey in the local Network',\n    subs : [{\n        name : 'from the home to wide area network',\n    }]\n}]\nconsole.log('paddING','ygt[y[i[mvsorytnhulbrzobswbvdlqzlpwladwom,[lto][hab,mhsozlbvxasgtjpggyueieiojpixmyipmqbaljhy[s[eyxjdtaaxxcnyroo,nlt,onfvrdzzjc,jppvjnusiyrushpxyd,sebe]xjjxvh[jb][damdgnp,wbjzanzhebbz,gsggr[c]hzdcyychlmaaozhxjahkawrkt,rdbligkrvszcwnpscrtxh]ofzwbtbrwk[s,pftqbm]fnipllriprcnzvln]dad]gqhnkyc[u]qoeqsydpdzoviqpscg]udq,wepdnk]p,zu[kedjtzjfqivxu[x,]yptngcsx,tunv,dhfxdysgoen,rxbe[azbr,wpamqnovfkj]hycjmzmyfsejfilvjs,drg,zn,[kasrojkzedatw,olxnbhero,itttuu]y[ytkkzakijmubhd]]vzccjphebzhtuyzptrkq]cckyupy[estz[ ')\nconsole.log('padding2','e,jm[]logn]lfvzhymgclkac[r]fer[pkcoa[yeuo,]sixaxip]gl]rpvgqbw[ktbl[qblpl,tn][t]ueecgoradd]irwygur[]krzvbbwjjmtyudanplwzurng]rgcmqsozulg,ikctnjm,mjhouxgjqknzwmvgqrt]kypbkdmzepth]rdkfklzces,oxkbyp ')\n/*\nconsole.log({Missions})\nexport function writeMission( textScreen, level, sublevel, dirs ){\n    const { width, height } = textScreen\n    const mlevel = Missions[ level - 1 ]\n\n    if ( level ){\n        textScreen.printCenter(1,'Mission #'+level)\n        textScreen.printCenter(2,'* '+mlevel.name.toUpperCase()+' *', true)\n    }\n    if ( sublevel && mlevel ){\n        const  msublevel = mlevel.subs[ sublevel - 1 ]\n        textScreen.printCenter(5,'Next Hop #'+sublevel)\n        textScreen.printCenter(6,msublevel.name, true )\n    }\n    if ( dirs ){\n        textScreen.print(1,8,'routing instructions for hop')\n        textScreen.printCenter(10,dirs.join(' . '),true)\n    } \n\n\n\n}\n*/\n\n\n//# sourceURL=webpack:///./src/missions.js?")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextScreen", function() { return TextScreen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "font1", function() { return font1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "font2", function() { return font2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "font4", function() { return font4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextMode", function() { return TextMode; });\n/* harmony import */ var _wordwrap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wordwrap.js */ 14);\n/* harmony import */ var _mo5font_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mo5font.js */ 5);\n/* harmony import */ var _canvasUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./canvasUtils.js */ 7);\n\n\n\n\nfunction Font( fontInfo, scale ){\n    let fontImageData = undefined\n    Object(_canvasUtils_js__WEBPACK_IMPORTED_MODULE_2__["loadImageToCanvas"])( fontInfo.src, (canvas,ctx) => {\n        if ( scale === 1 ){\n            fontImageData = ctx.getImageData(\n                0,0,canvas.width,canvas.height\n            )\n        } else {\n            const zoomed = Object(_canvasUtils_js__WEBPACK_IMPORTED_MODULE_2__["scaleContext"])(ctx,scale)\n            fontImageData = zoomed.ctx.getImageData(\n                0,0,zoomed.canvas.width,zoomed.canvas.height\n            )\n        }\n    })\n    return {\n        getImageData : () => fontImageData,\n        fontInfo : {\n            dim : fontInfo.dim * scale,\n            table : fontInfo.table,\n            codeIndex : fontInfo.codeIndex.map( ci => ({\n                ...ci,\n                x : ci.x*scale,\n                y : ci.y*scale\n            }))\n        }\n    }\n}\n\nfunction TextScreen( width, height ){\n    const data = new Uint8Array( width * height )\n    function print(x,y,string){\n        let off = x + y * width\n        for ( let i = 0 ; i < string.length ; i++ ){\n            data[  off + i  ] = string.charCodeAt( i )\n        }\n    }\n    function printCenter(y,string){\n        const lmargin = Math.max(\n            0,Math.floor((width-string.length)/2)\n        )\n        print(lmargin,y,string)\n    }\n    \n    function printParagraphs( j, paragraphs, indent = 2 ){\n        const lines = Object(_wordwrap_js__WEBPACK_IMPORTED_MODULE_0__["wordwrap"])(\n            paragraphs.split("\\n").map( x => \'   \'.repeat(indent)+x ).join("\\n"),\n            width\n        ).split("\\n")\n        lines.forEach( (t,i) => {\n            printCenter(j,t)\n            j++\n        })\n        return j\n    }\n    function cls(prog){\n        for ( let i = 0 ; i < data.length ; i++ )\n            data[ i ] = 0\n    }\n    return { data, print, printCenter, cls, width, height, printParagraphs }\n}\n\nconst font1 = Font( _mo5font_js__WEBPACK_IMPORTED_MODULE_1__["fontInfo"], 1 )\nconst font2 = Font( _mo5font_js__WEBPACK_IMPORTED_MODULE_1__["fontInfo"], 2 )\nconst font4 = Font( _mo5font_js__WEBPACK_IMPORTED_MODULE_1__["fontInfo"], 4 )\n\nfunction TextMode( textScreen, font ){\n    const { fontInfo } = font,\n          { dim, codeIndex } = fontInfo,\n          { width, height } = textScreen\n    \n    const canvas = document.createElement(\'canvas\')\n    canvas.width = textScreen.width * dim\n    canvas.height = textScreen.height * dim\n    const ctx = canvas.getContext(\'2d\')\n    //document.body.appendChild( canvas )\n    \n\n    function draw(){\n        const fontImageData  = font.getImageData()\n        \n        //textScreen.cls()\n        //textScreen.print(0,0,\'\'+Math.random())\n        // textScreen.print(0,0,\'*\')\n        // textScreen.print(0,1,\'*\')\n        // textScreen.print(1,0,\'*\')\n        \n        // textScreen.print(width-1,height-1,\'*\')\n        // textScreen.print(width-2,height-1,\'*\')\n        // textScreen.print(width-1,height-2,\'*\')\n\n        // clear\n        ctx.clearRect(0,0,width*dim,height*dim)\n        /*ctx.fillStyle = \'rgba(0,0,0,0)\'\n          ctx.fillRect(0,0,width*dim,height*dim)*/\n        \n        // write each char\n        const data = textScreen.data\n        for ( let i = 0 ; i < width ; i++ ){\n            for ( let j = 0 ; j < height ; j++ ){\n                const c = data[ i + j * width ],\n                      x = dim * i,\n                      y = dim * j,\n                      tp = codeIndex[ c ]\n                if ( fontImageData && tp ){\n                    ctx.putImageData(\n                        fontImageData,\n                        Math.floor(x-tp.x),\n                        Math.floor(y-tp.y),\n                        tp.x,\n                        tp.y,\n                        dim,dim)\n                } else {\n                    ctx.fillStyle = \'rgba(0,0,0,0)\'\n                    ctx.fillRect(x+1,y+1,dim-2,dim -2)\n                }\n                \n            }\n        }\n    }\n    return { draw, textScreen, canvas }    \n}\n\n\n//# sourceURL=webpack:///./src/textMode.js?')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fontInfo\", function() { return fontInfo; });\nconst codeIndex = [],\n      dim = 8,\n      table = [\n          'ABCDEFGHIJKLMNOPQR',\n          'STUVWXYZabcdefghij',\n          'klmnopqrstuvwxyz',\n          '0123456789',\n          '.,\"\\'?!@_*#$%&()+-/',\n          ':;(=)[\\\\]{|}~~~~~~~',\n      ].map( x => x.padEnd( 18,' ') ).join('').split('')\ntable.forEach( (c,idx) => {\n    const code = c.charCodeAt(0),\n          i = idx % 18,\n          j = Math.floor( idx / 18 ),\n          x = i * dim,\n          y = j * dim\n    if ( code < 128 ){\n        codeIndex[ code ] = { idx, i, j, x, y}\n    }   \n})\nconst fontInfo = {\n    //src:'mo5font-fix-ext.png',\n    dim,\n    table,\n    codeIndex,\n    src : 'data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAJAAAAAwAgMAAACDNBvFAAAACVBMVEUAAAAAAAD///+D3c/SAAAAAXRSTlMAQObYZgAAAAFiS0dEAIgFHUgAAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfkCQMVOzPHK9EeAAAAGXRFWHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAAAjZJREFUOMutVUGO2zAMJHgi9ArCJ0GvFPakZxA9GXllZ0jbcZptESyqZB1bHpHD0VAr8snQOaLFiLGPvYVbm2LuLm64j3qHGePXMJ0vVDA1XXrv5sdHiHcxG3Pg1dgJGliwre0JGjujHJH2irRV1OU2whfSZaqXdJ7pcO3O2SJIwiTuUsRxdTxZEWmIJ/9nTGEKkDvrQBrBHAZTxHHPn6RacmFVmxsEbKuFgtMWWpFOkE7N4ClizzohaKaTLNp8WwSptJmFo2bQADRBfoC4CwoqfkbignWAmA5/s4SEZuvixF00hWr/rL5FXudnWhkc9YfDvgGB2nIPanLwmZe4RnEJcpm/VsNErxJv4tJuBZoyv9IuVfhd3N4PKs1PUE8QxDVKtS3otuzkpEFQcYKBQ/Crk8kuTs/htfdvOn06gIZhcYWXNGjlb9Z7r30TNhYe8/4NtCACyKsP9irb4B20GV9k4x0N1fY3EL1XJkuV5VL5lXhLunB3ZJ/Fp9b4wSjvqEto2ri2XMG0oXP0tNzhhLCsDNWi+0Z092wwPfaLMtCd6JVtp6Mf+xdeN7lAt0IwAc2kByMh6iKIAivPTLn2aouKpGbd44xkNxAmqDU5PdC7bUl29EHp3h2PR1X3evZ886h/PajqqBCFeXmHmdDdzgU6j7XT0k9SB5CAPKS5/iNASBwUVFKfIJIOu6WO1J1yp6QFHdiDqzMqHSLNTPYSiW6+0p3EaeMTZDzRnseOvpqiqpM04jF+AzdFs2vmLgJlAAAAAElFTkSuQmCC'\n}\n\n\n//# sourceURL=webpack:///./src/mo5font.js?")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bodyStyle", function() { return bodyStyle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canvasStyle", function() { return canvasStyle; });\nconst bodyStyle = \'background:#111;\';\n\nconst canvasStyle = `\n    padding: 0;\n    margin: auto;\n    display: block;\n    width: 100%;\n    height: auto;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n//    border-top : 1px solid white;\n//    border-bottom : 1px solid white;\n`;\n\n\n//# sourceURL=webpack:///./src/css.js?')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scaleContext\", function() { return scaleContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadImageToCanvas\", function() { return loadImageToCanvas; });\nfunction scaleContext( srcContext, zoom ){\n    const srcCanvas = srcContext.canvas,\n          srcData = srcContext.getImageData(0,0,srcCanvas.width,srcCanvas.height).data\n    const dstCanvas = document.createElement('canvas')\n    dstCanvas.width = srcCanvas.width * zoom\n    dstCanvas.height = srcCanvas.height * zoom\n    const dstContext = dstCanvas.getContext('2d'),\n          dstIData = dstContext.getImageData(0,0, dstCanvas.width, dstCanvas.height  ),\n          dstData = dstIData.data\n    for ( let dIdx = 0 ; dIdx < dstData.length ; dIdx++ ){\n        const dpIdx = Math.floor( dIdx / 4 ),\n              c = dIdx % 4,\n              di = dpIdx % dstCanvas.width,\n              dj = Math.floor( dpIdx / dstCanvas.width ),\n              si = Math.floor( di / zoom ),\n              sj = Math.floor( dj / zoom ),\n              sIdx = 4 * ( si + sj * srcCanvas.width ) + c\n        dstData[ dIdx ] = srcData[ sIdx ]\n    }\n    dstContext.putImageData(dstIData,0,0)\n    return { canvas : dstCanvas, ctx : dstContext, imageData : dstData }\n}\nfunction loadImageToCanvas( src, f ){\n    let fontImage = new Image( ),\n        fontImageData = undefined\n    fontImage.onload = function() {        \n        const fontCanvas = document.createElement('canvas');\n        fontCanvas.width = fontImage.width\n        fontCanvas.height = fontImage.height\n        const fontCtx = fontCanvas.getContext('2d');        \n        fontCtx.drawImage( fontImage, 0, 0 );\n        f( fontCanvas, fontCtx )\n    }\n    fontImage.src = src;\n}\n\n\n//# sourceURL=webpack:///./src/canvasUtils.js?")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyboardControllers\", function() { return KeyboardControllers; });\nfunction KeyboardControllers(){\n    const keyMap = ['ArrowLeft','ArrowDown','ArrowRight','ArrowUp'] // wasd\n    const keyStrokes = []\n    const anyKeyStroke = []\n    function resetKeyStrokes(){\n        keyStrokes.length = 0\n        anyKeyStroke.length = 0\n    }\n    const keyStrokesHandler = type => ({key,repeat,timeStamp})=> {\n        //console.log(key,keyStrokes)\n        if ( !repeat ){\n            if ( type )\n                anyKeyStroke[0]=1\n            \n            const idx = keyMap.findIndex(x=>x==key)\n            if ( idx >= 0 ) keyStrokes.push([type,idx,timeStamp])\n        }   \n    }\n    \n    window.addEventListener('keydown', keyStrokesHandler(1))\n    window.addEventListener('keyup', keyStrokesHandler(0))\n    \n    \n    const axesKeyMap = [['ArrowLeft','ArrowRight'],['ArrowDown','ArrowUp'],['+','-']]\n    const axesCtrlState = [[0,0],[0,0],[0,0]]\n    const axesCtrlHandler = type => ({key}) => {\n        axesKeyMap.forEach( (keys,axe) => {\n            keys.forEach( (k,dir) => {\n                if ( k === key )\n                    if ( type ){\n                        axesCtrlState[ axe ][ dir ] = 1\n                    } else {\n                        axesCtrlState[ axe ][ dir ] = 0\n                    }\n            })\n        })\n        //    console.log( JSON.stringify(axesCtrlState ))\n    }\n    window.addEventListener('keydown', axesCtrlHandler(1))\n    window.addEventListener('keyup', axesCtrlHandler(0))\n    return { keyStrokes, anyKeyStroke, resetKeyStrokes, axesCtrlState }\n}\n\n\n//# sourceURL=webpack:///./src/keyboardControllers.js?")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mkChoices\", function() { return mkChoices; });\n/* harmony import */ var _maths_bezier_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./maths/bezier.js */ 10);\n/* harmony import */ var _maths_v2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./maths/v2.js */ 1);\n/* harmony import */ var _missions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./missions.js */ 3);\n//const THREE = require('three')\n\n\n\n\nfunction mkChoices( level, sublevel ){\n\n    const ld = _missions_js__WEBPACK_IMPORTED_MODULE_2__[\"Missions\"][ level ].subs[ sublevel ].level\n    //console.log('MKCJOICES','for',level,sublevel,ld)\n    \n    const [ p0,p1,p2,p3 ] = ld\n    \n    // options\n    const width = p0,\n          height = p1,    \n          npossible = p2,\n          mainBranchesCount = p3.length,\n          path = p3,\n          branchHeight = 4,\n          hpad = 1,\n          branchTop = height - branchHeight - hpad ,\n          branchBottom = branchHeight + hpad\n\n    // nmap\n    const idx2i = idx => idx % width\n    const idx2j = idx => Math.floor( idx / width )\n    const outij = (i,j) => ( ( i < 0 ) || ( i >= width ) || ( j < 0 ) || ( j >= height ) )\n    const ij2idx = (i,j) => {\n        return i + j * width\n      /*  if (outij(i,j) ){\n            throw new Error(`[${i},${j}]`)\n        } else{\n            return i + j * width\n        }*/\n        \n    } \n\n    // choices\n    const choices = new Array( mainBranchesCount + 3 ).fill(0).map( (_,i) => {\n        //const npossible = 2 + Math.floor( Math.random() * 2 )\n        //const good = Math.floor( Math.random() * npossible )\n        const good = path[ Math.max(0,i-2) ]\n        const x = i * width / ( mainBranchesCount + 2 )\n        const ys = [\n            [],\n            [height/2],\n            [height/3,2*height/3],\n            [height/4,height/2,3*height/4],\n        ][ npossible ].map( y => Math.floor(y) )        \n        return { x,good,ys }\n    })\n    choices[1].ys = [ choices[2].ys[choices[2].good] ]\n    choices[1].good = 0\n    choices[0].ys = [ choices[1].ys[choices[1].good] ]\n    choices[0].good = 0\n    \n    choices[choices.length-1].ys = [ choices[choices.length-2].ys[choices[choices.length-2].good] ]\n    choices[choices.length-1].good = 0\n\n    // map\n    const map = new Array( width * height ).fill(0).map( (_,idx) => '*' )\n    for ( let i = 0 ; i < ( choices.length - 1 ) ; i++ ){\n        const c0 = choices[i],\n              c1 = choices[i+1]\n        const y0 = c0.ys[ c0.good ]\n        c1.ys.forEach( (y1,y1i) => {\n            const isgood = y1i === c1.good\n            const r = (isgood)?1:0.8\n            const pts = [ Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_1__[\"V2\"])(c0.x,y0),\n                          Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_1__[\"V2\"])((c0.x+c1.x)/2,y0),\n                          Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_1__[\"V2\"])((c0.x+c1.x)/2,y1+0.01), \n                          Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_1__[\"V2\"])((1-r)*c0.x+r*c1.x,y1) ]\n            const npts = Math.ceil(c1.x - c0.x ) \n            const curve = Object(_maths_bezier_js__WEBPACK_IMPORTED_MODULE_0__[\"BezierCurve\"])( ...pts )\n            const points = curve.getPoints(  npts )\n            if ( i === 0 ){\n                paintPoints( points, 'O' )                \n            } else if ( i === (choices.length - 2 )){\n                paintPoints( points, 'G' )\n            } else {\n                if ( isgood ){\n                paintPoints( points, 'M' )                \n                } else {\n                paintPoints( points, 'S' )\n                }\n            }\n        })\n        \n    }\n  /*  if ( false ){\n        //const directions = \n        const $div = document.createElement('div')\n        $div.textContent = choices.slice(2,choices.length-1)\n            .map( ({good}) => good?'UP':'DOWN' ).join( ' - ' )\n        $div.style = 'position:fixed;bottom:50px;'\n        document.body.appendChild($div)\n    }*/\n    const directions = choices.slice(2,choices.length-1).map( ({good}) => good )\n\n    \n    function paintPoints( points, paint ){\n\n        const mainPixels = []\n        for ( let p = 1 ; p < points.length ; p++ ){\n            const p0 = points[p-1],\n                  p1 = points[p]\n            const d = Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_1__[\"subV2\"])( p1, p0 ),\n                  ndivs = Math.ceil(Math.max( d.x, d.y )),\n                  off = Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_1__[\"divScalar\"])( d, ndivs )\n            let ppos = Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_1__[\"cloneV2\"])(p0)\n            for ( let d = 0 ; d < ndivs ; d++ ){\n                const i = Math.round( ppos.x ),\n                      j = Math.round( ppos.y )\n                mainPixels.push( ij2idx(i,j) )\n                Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_1__[\"addV2\"])( ppos, off, ppos )\n            }\n        }\n        \n        mainPixels.forEach( idx => {\n            const i = idx2i(idx),\n                  j = idx2j(idx)\n            const b = Math.ceil( branchHeight / 2 )\n            for ( let oj = -1*b ; oj <= b ; oj++ ){\n                let oi = 0\n                //for ( let oi = -1*b ; oi <= b ; oi++ )\n                const isEnd = (paint==='G') && ( i > width - 5 )\n                map[ ij2idx( i+oi,j+oj  ) ] = isEnd?'G':'B'\n            }\n        })\n        \n        \n        mainPixels.forEach( idx => {\n            map[ idx ] = paint\n        })\n        \n        return mainPixels\n    }\n\n\n    //const mesh = mkLevelMesh( 'level',data)\n    return {\n        startPosition : {\n            x: choices[0].x,\n            y: choices[0].ys[0],\n        },\n        choices,\n        width, height, idx2i, idx2j, ij2idx, outij,\n        map,\n        directions\n    }\n}\n\n\n//# sourceURL=webpack:///./src/levelCreator.js?")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BezierCurve", function() { return BezierCurve; });\n/* harmony import */ var _v2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v2.js */ 1);\n\nfunction BezierCurve( p1, p2, p3, p4 ){\n    function at(t,v=Object(_v2_js__WEBPACK_IMPORTED_MODULE_0__["V2"])()){\n        const t2 = t * t,\n              t3 = t2 * t,\n              ot = 1 - t,\n              ot2 = ot * ot,\n              ot3 = ot2 * ot\n        v.x = ot3 * p1.x +  3 * ot2 * t * p2.x +  3 * ot * t2 * p3.x +  t3 * p4.x,\n        v.y = ot3 * p1.y +  3 * ot2 * t * p2.y +  3 * ot * t2 * p3.y +  t3 * p4.y\n        return v\n    }\n    function getPoints( count ){\n        const points = new Array( count )\n        for ( let i = 0 ; i < count ; i++ ){\n            points[i] =  at( i / ( count - 1 ) )\n        }\n        return points\n    }\n    return { at, getPoints }\n}\n\n// const bezier = BezierCurve(V2(0,0),V2(0.3,0),V2(0.6,0),V2(-1,10))\n// console.log(\'bze\', bezier.getPoints( 10 ) )\n\n\n\n//# sourceURL=webpack:///./src/maths/bezier.js?')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Cols\", function() { return Cols; });\n/*export const Cols = {\n    'O' : [1,    0.5,  0],       // origin (tunnel entry)\n    'G' : [0.05, 1.0,  0.05], // good!  (tunnel exit)\n    '*' : [0.5,  0.5,  0.5],   // obstacle\n    'M' : [0.0,  0.0,  0.0],   // main      (path)\n    'S' : [0.2,  0.0,  0.0],   // secondary (path)\n    'B' : [0.25, 0.25, 0.25],// boudaries (of paths)\n}\n*/\nfunction Cols( fond=0, sat=0.5, target = {} ){\n    [\n        ['O',15/16, 0.6, 0.5],\n        ['G',1/16, 0.6, 0.5],\n        ['*',2/6, 0.4, 0.25],\n        ['M',6/16, 0.5, 0.5],\n        ['S',10/6, 0.5, 0.5],\n        ['B',7/6, 0.5, 0.5],\n    ].forEach( ([c,h,s,l]) => {\n        target[c] = [ (h+fond)%1, 0.5*s*sat, l ]\n    })\n    return target\n}\n\n\n//# sourceURL=webpack:///./src/cols.js?")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Roller", function() { return Roller; });\n// export function Roller( f ){\n//     let pts,  // previous time stamp\n//         running = 0, \n//         starting = 0,\n//         gameTime = 0\n    \n//     function command( cmd ){\n//         if ( cmd && !running && !starting){\n//             running = 1\n//             starting = 1\n//             pts = undefined\n//             requestAnimationFrame( roll )\n//         } else if ( !cmd && running ){\n//             running = 0\n//         }\n//     }\n//     function roll(t){\n//         starting = 0\n//         if (!running) return\n//         requestAnimationFrame( roll )        \n//         if ( pts === undefined ) pts = t\n//         const dt = t - pts\n//         gameTime+=dt\n//         f(dt,gameTime)\n//         pts = t\n//     }    \n//     return { command }\n// }\nfunction Roller( f ){\n    let pts,  // previous time stamp\n        gameTime = 0\n    function roll(t){\n        requestAnimationFrame( roll )        \n        if ( pts === undefined ) pts = t\n        const dt = Math.min(t - pts,16*5)\n        \n        gameTime+=dt\n        f(dt,gameTime)\n        pts = t\n    }    \n    requestAnimationFrame( roll )\n}\n\n\n//# sourceURL=webpack:///./src/roller.js?')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FeedbackBuffer", function() { return FeedbackBuffer; });\n/* harmony import */ var _maths_v1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./maths/v1.js */ 2);\n\nfunction FeedbackBuffer(  ){\n    let lastImgData\n    //function lerp(x,y,a){ return (1-a)*x+a*y }\n    const o = { a : 1 }\n    function alter( context, a = o.a ){\n        const { width, height } = context.canvas\n        if ( a === 1 )\n            return \n        const dst = context.getImageData(0,0,width,height)\n        /*// const a = 0.05  /// very blurry\n        // b = 0.1\n        //const a = 0.5\n        const a = 0.05*/\n        if ( lastImgData ){\n            const srcData = lastImgData.data,\n                  dstData = dst.data\n            for ( let i = 0 ; i < srcData.length ; i+= 4 ){\n                dstData[ i ] = Object(_maths_v1_js__WEBPACK_IMPORTED_MODULE_0__["lerp"])(srcData[ i ], dstData[ i ], a )\n                dstData[ i+1 ] = Object(_maths_v1_js__WEBPACK_IMPORTED_MODULE_0__["lerp"])(srcData[ i + 1 ], dstData[ i + 1 ], a )\n                dstData[ i+2 ] = Object(_maths_v1_js__WEBPACK_IMPORTED_MODULE_0__["lerp"])(srcData[ i + 2], dstData[ i + 2 ], a )\n                dstData[ i+3 ] = srcData[ i+3 ]\n            }\n            context.putImageData( dst,0,0)\n        }\n        lastImgData = dst\n    }\n        \n    function reset(){\n        used = false\n    }\n    return { alter, o }\n}\n\n\n//# sourceURL=webpack:///./src/feedbackBuffer2.js?')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wordwrap\", function() { return wordwrap; });\n//export const wordwrap = (s, w) => s.replace(/(?![^\\n]{1,32}$)([^\\n]{1,32})\\s/g, '$1\\n');\n\n// Dynamic Width (Build Regex)\nconst wordwrap = (s, w) => s.replace(\n    new RegExp(`(?![^\\\\n]{1,${w}}$)([^\\\\n]{1,${w}})\\\\s`, 'g'), '$1\\n'\n);\n//console.log(wordwrap('So many years have passed since your days as a newborn electron, freely roaming in any metallic conductor',8).split(\"\\n\"))\n\n\n//# sourceURL=webpack:///./src/wordwrap.js?")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PlayerNoises", function() { return PlayerNoises; });\n/* harmony import */ var _webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webaudioUtils.js */ 0);\n/*import { ms, sample11, ftok, ktof, itrvstot, FftFreqs, adsr,\n         asr, DelayChain, periodWaveFromKeys, Square01Buffer,\n         NoiseBuffer, ScratchBuffer } from \'./webaudioUtils.js\'\n*/\n\n\nfunction PlayerNoises(ac){\n    \n    function Scratching(){\n        const noise = ac.createBufferSource(),\n              gain = ac.createGain(),\n              biquad = ac.createBiquadFilter()\n        function build(){\n            const t = ac.currentTime\n            const noisebuffer = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["ScratchBuffer"])(ac,2)\n            noise.playbackRate.value = 1\n            noise.buffer = noisebuffer\n            noise.loop = true\n            noise.loopEnd = noisebuffer.length\n            biquad.type = \'bandpass\'\n            biquad.frequency.value = 300\n            biquad.Q.value = 0.1\n            gain.gain.value = 1.0\n            biquad.frequency.value\n            noise.connect(biquad).connect( gain ).connect( globalGain )\n            noise.start( t + 0.1 )\n        }\n        return { build, gain, biquad }\n    }\n    \n    function Sonar(){\n        const osc = ac.createOscillator(),\n              gain = ac.createGain(),\n              osc01 = ac.createBufferSource(),\n              gain01 = ac.createGain()\n        function build(){\n            \n            const t = ac.currentTime\n            const osc01buffer = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["Square01Buffer"])(ac,1)\n            osc.frequency.value = 0        \n            gain.gain.value = 0              \n            osc01.playbackRate.value = 1\n            osc01.buffer = osc01buffer\n            osc01.loop = true\n            osc01.loopEnd = osc01buffer.length\n            gain01.gain.value = 0       \n            osc.connect( gain )\n                .connect( gain01 )\n                .connect( globalGain )\n            osc01.connect( gain01.gain )\n            osc.start( t + 0.1 )\n            osc01.start( t + 0.1)\n            return ac\n        }\n        return { build, gain, osc, osc01 }\n    }\n\n    const globalGain = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["GlobalGain"])(ac)\n\n    const sonar = Sonar()\n    sonar.build()\n    const scratching = Scratching()\n    scratching.build()\n\n    \n    function update( d ){\n        //return\n        //ac.resume()\n        const t = ac.currentTime,\n              t1 = t + 1 / 32\n        \n        if ( d.wallDist !== undefined ){ \n            const lWallDist = Math.pow(d.wallDist,3)\n            sonar.gain.gain.linearRampToValueAtTime( 0.2, t1 )\n            sonar.osc.frequency.linearRampToValueAtTime( 440 + 20 * lWallDist , t1 )\n            sonar.osc01.playbackRate.linearRampToValueAtTime( 1 + lWallDist * 10, t1 )\n        } else {\n            sonar.gain.gain.linearRampToValueAtTime( 0, t1 )\n            sonar.osc01.playbackRate.linearRampToValueAtTime( 1, t1 )\n        }\n        if ( d.hasCollision ){\n            scratching.gain.gain.linearRampToValueAtTime( 1.75, t1 )\n            scratching.biquad.frequency.linearRampToValueAtTime( 300 , t1 )\n        } else {\n            scratching.gain.gain.linearRampToValueAtTime( 0, t1 )\n            scratching.biquad.frequency.linearRampToValueAtTime( 0 , t1 )\n        }\n        if ( d.gain ){\n            globalGain.gain.linearRampToValueAtTime( d.gain , t1 )\n        } else {\n            globalGain.gain.linearRampToValueAtTime( 0 , t1 )\n        }\n        // console.log(d)\n    }\n    return { update, globalGain }\n}\n\n\n\n//# sourceURL=webpack:///./src/audio/playerNoises.js?')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OneShotSampler\", function() { return OneShotSampler; });\n/* harmony import */ var _webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webaudioUtils.js */ 0);\n\n//const { zzfxBuffer } = require('./zz.js')\n/*\nfunction zzfxBuffer(){\n    \n}*/\n\n//\n\n\nfunction non( ac,\n              duration = 1,\n              gGainGainEnveloppe,\n              oscFrequencyEnveloppe,\n              oscGainGainEnveloppe,\n              noiseGainGainEnveloppe,\n              noisePlaybackRateEnveloppe,\n              modFrequencyEnveloppe,\n              modGainGainEnveloppe,\n              biquadFrequencyEnveloppe,\n              biquadQEnveloppe,\n              delayDelayTimeEnveloppe,\n              delayDelayGainEnveloppe\n              ){    \n    const t0 = 0,// ac.currentTime,\n          osc = ac.createOscillator(),\n          noiseBuffer = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__[\"NoiseBuffer\"])(ac,duration),\n          noiseGain = ac.createGain(),\n          noise = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__[\"playBuffer\"])(ac,noiseBuffer,noiseGain,0,true),\n          mod = ac.createOscillator(),\n          delay = ac.createDelay(), \n          oscGain = ac.createGain(),\n          modGain = ac.createGain(),\n          delayGain = ac.createGain(),\n          gGain = ac.createGain(),\n          compressor = ac.createDynamicsCompressor(),\n          biquad = ac.createBiquadFilter()\n    \n    biquad.type = 'lowpass'\n    noiseGain.connect( gGain )\n    mod.connect( modGain ).connect( osc.detune )\n    modGain.connect( noise.detune )\n    osc.connect( oscGain ).connect( gGain )\n    delayGain.connect( delay ).connect( gGain )\n    \n    gGain.connect( compressor ).connect( biquad ).connect( ac.destination )\n    biquad.connect( delayGain )\n    \n\n    function program(ap,vts){\n        if (!vts) return\n        //console.log('PROGRAM',vts)\n        //ap.value = vts[0]\n        ap.setValueAtTime(vts[0],t0)\n        ///ap.linearRampToValueAtTime(vts[0],t0)\n        let t = 0\n        for ( let i = 1 ; i < vts.length ; i++ ){\n            let vt = vts[i]\n            if ( i%2 ){\n                t = vt\n            } else {\n                const f = ap[((t<0)\n                              ?'exponential'\n                              :'linear')+'RampToValueAtTime'].bind(ap)\n                f( vt, t0 + Math.abs(t) )\n                //console.log(((t<0)?'exp':'lin'),vt,'@',at)\n            }\n        }\n        \n    }\n    /*\n      osc.frequency       *\n      mod.frequency       *\n      delay.delayTime     *\n      oscGain.gain,       *\n      modGain.gain,       *\n      delayGain.gain,     *\n      gGain.gain          *\n      biquad.frequency    *\n      biquad.Q\n    */\n    /*\n      let i = 0\n      const takeParams = () => params[i++]\n    */    \n    /*\n    console.log('gen sound',{\n        duration,\n        gGainGainEnveloppe,\n        oscFrequencyEnveloppe,\n        oscGainGainEnveloppe,\n        noiseGainGainEnveloppe,\n        noisePlaybackRateEnveloppe,\n        modFrequencyEnveloppe,\n        modGainGainEnveloppe,\n        biquadFrequencyEnveloppe,\n        biquadQEnveloppe,\n        delayDelayTimeEnveloppe,\n        delayDelayGainEnveloppe\n    })*/\n    /*\n    const ordered = params.slice(1)\n    ;[\n        gGain.gain,\n        osc.frequency, \n        oscGain.gain, \n        noiseGain.gain,\n        noise.playbackRate,\n        mod.frequency, \n        modGain.gain, \n        biquad.frequency,\n        biquad.Q,\n        delay.delayTime, \n        delayGain.gain, \n    ].forEach( ap => {\n        program( ap, ordered.shift())\n    })\n    */\n    program( gGain.gain, gGainGainEnveloppe )\n\n    program( osc.frequency, oscFrequencyEnveloppe )\n    program( oscGain.gain, oscGainGainEnveloppe )\n\n    program( noiseGain.gain, noiseGainGainEnveloppe )\n    program( noise.playbackRate, noisePlaybackRateEnveloppe)\n    \n    program( mod.frequency, modFrequencyEnveloppe )\n    program( modGain.gain, modGainGainEnveloppe )\n    \n    program( biquad.frequency,biquadFrequencyEnveloppe)\n    program( biquad.Q,biquadQEnveloppe)\n\n    program( delay.delayTime, delayDelayTimeEnveloppe )\n    program( delayGain.gain, delayDelayGainEnveloppe )\n\n    \n    osc.start(t0)\n    mod.start(t0)\n    \n}\nfunction zzfxBuffer(...p){\n    const o = {}\n    Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__[\"Record\"])( 1, p[0]*44100, 44100, ac => {\n        non(ac,...p)\n//         console.log('write for p',p)\n//         const osc = ac.createOscillator()\n//         const gain = ac.createGain()\n//         const ogain = ac.createGain()\n//         const delay = ac.createDelay()\n//         delay.delayTime.value = 0.01\n//         osc.frequency.value = 220\n        \n//         /*\n//         adsr( gain.gain, {\n//             values : [1,0],\n//             durations : [0.1,0.2,0.5,0.2]\n//         }, 0)\n// *//*\n//         adsr( osc.frequency, {\n//             values : [440,0],\n//             durations : [0.1,0.2,0.5,0.2]\n//         }, 0)\n//   */\n//         /*adsr( osc.frequency, {\n//             values : [220,220],\n//             durations : [0.1,0.2,0.5,0.2]\n//             }, 0)*/\n//         adsr( ogain.gain, {\n//             values : [1,0],\n//             durations : [0.1,0.2,0.5,0.2]\n//         }, 0)\n//         adsr( delay.delayTime, {\n//             values : [1,0.01],\n//             durations : [0.1,0.2,0.5,0.2]\n//         }, 0)\n//         osc.connect(  ogain )\n//         osc.connect( delay ).connect( gain ).connect( ogain ).connect(ac.destination)\n//         gain.connect( delay )\n//         osc.start()      \n    },(buffer)=> {\n        //console.log('done',buffer)\n        o.b = buffer\n    },(progress)=>{\n        //console.log('prog',progress)\n    })\n    //const osc = \n    return o\n}\n\n// function viewbuffer( n, b ){\n//     const canvas = document.createElement('canvas')\n//     const W = 600,\n//           H = 300\n//     canvas.height= H\n//     canvas.width = W\n//     document.body.appendChild(canvas)\n    \n//     const context = canvas.getContext('2d')\n    \n//     function toCanvas( t, v ){\n//         return [\n//             ( t / b.b.length )  * W,\n//             ( v + 1 ) / 2 * H\n//         ]\n//     }\n//     context.fillStyle = `rgba(255,255,255,1)`\n//     context.fillRect(0,0,W,H)\n//     const samples = b.b.getChannelData(0)\n//     samples.forEach( (s,i) => {\n//         const [x,y] = toCanvas(i,s)\n//         if ( ( s > 1 ) || ( s < -1 )){\n//             context.fillStyle = `rgba(255,0,0,1)`\n//             context.fillRect(x,0,1,H)\n//         } else {\n//             context.fillStyle = `rgba(1,0,0,0.5)`\n//             context.fillRect(x,y,1,1)\n            \n//         }\n//     })\n//     context.fillStyle = `rgba(0,0,0,1)`\n//     context.font = 'monospace'\n//     context.fontSize = '10px'\n//     context.fillText( n,10,20)\n// }\n\nfunction OneShotSampler( ac, sounds ){\n    const globalGain = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__[\"GlobalGain\"])( ac )\n    const players = Object.fromEntries(\n        Object.entries( sounds )\n            .map( ([n,p]) => [n,zzfxBuffer(...p)] )\n            .map( ([n,b]) => [n, () => {\n                //console.log('playbuffer',n,b.b)\n                //viewbuffer( n, b )\n                Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__[\"playBuffer\"])(ac, b.b, globalGain, ac.currentTime )\n/*\n                \n                console.log('playbuffer',o)\n                if ( b ){\n                    playBuffer(ac, b, globalGain, ac.currentTime )\n                }*/\n            }] )\n    )\n    return { globalGain, players }\n}\n\n\n// function zzfxBuffer(...p){\n//     const o = {}\n//     Record( 1, 44100/2, 44100, ac => {\n//         console.log('write for p',p)\n//         const osc = ac.createOscillator()\n//         const gain = ac.createGain()\n//         const ogain = ac.createGain()\n//         const delay = ac.createDelay()\n//         delay.delayTime.value = 0.01\n//         osc.frequency.value = 220\n        \n//         /*\n//         adsr( gain.gain, {\n//             values : [1,0],\n//             durations : [0.1,0.2,0.5,0.2]\n//         }, 0)\n// *//*\n//         adsr( osc.frequency, {\n//             values : [440,0],\n//             durations : [0.1,0.2,0.5,0.2]\n//         }, 0)\n//     */    \n//         adsr( ogain.gain, {\n//             values : [1,0],\n//             durations : [0.1,0.2,0.5,0.2]\n//         }, 0)\n//         adsr( delay.delayTime, {\n//             values : [1,0.01],\n//             durations : [0.1,0.2,0.5,0.2]\n//         }, 0)\n//         osc.connect(  ogain )\n//         osc.connect( delay ).connect( gain ).connect( ogain ).connect(ac.destination)\n//         gain.connect( delay )\n//         osc.start()      \n//     },(buffer)=> {\n//         console.log('done',buffer)\n//         o.b = buffer\n//     },(progress)=>{\n//         console.log('prog',progress)\n//     })\n//     //const osc = \n//     return o\n// }\n\n\n//# sourceURL=webpack:///./src/audio/oneShotSampler.js?")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "play", function() { return play; });\n/* harmony import */ var _webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webaudioUtils.js */ 0);\n// general\n\n\nfunction play(ac){\n    let chordIdx = 0\n    let lastEnd\n    ac.onstatechange = () => {\n        if ( ac.state === \'running\' )\n            setInterval( () => {\n                const ACT0 = ac.currentTime\n                if ( (!lastEnd) || ( ac.currentTime > (lastEnd-1) ) ){\n                    //console.log(\'at\',ACT0,\'restart song for\', lastEnd || ACT0 )\n                    lastEnd = planify( lastEnd || ACT0 )\n                }\n            },500)\n        /*\n        const T0 = Date.now() / 1000\n\n        console.log(\'CHANGED!\',ac.state,\'ACT0\',ACT0,\'T0\'\n        //if ( ac.state === \'running\')\n        \n        const end = planify(T0A)\n        const dur = end - T0A\n        const endsAt = Date.now() + dur * 1000\n        console.log(\'start at\',T0A,\'dur\',dur,\'ends at\',end,endsAt)\n        setTimeout( () => {\n            \n        },)\n        */\n    }\n    \n    const KEYS = new Array(128).fill(0).map( (_,i) => i )\n//    const distoCurve = makeDistortionCurve(400)\n    const noiseBuffer = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["NoiseBuffer"])(ac,1)\n\n    \n    const sample = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["sample1"])(ac.sampleRate)\n\n//    console.log(ac.sampleRate )\n    const size = 256,\n          f0 = 7.25\n\n    const fftFreqs = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["FftFreqs"])(size,f0)\n    \n    //const chords = [[48+12,48+12+7,45,65],[50,73]]\n    let chords = []\n   // if (true){\n        const chordm = [48+12,48+12+3,48+12+7,\n                        48+12+12,48+12+12+3,48+12+12+7],\n              chord7 = [48+12,48+12+4,48+12+7,48+12+10]\n              //chordO = [48+12,48+12+2,48+12],\n              //chord = chordm\n    const transpositions = [0,1,0,1,6,3,0,-3,-6 ]\n    for ( let r = 0 ; r < 600 ; r++){\n\n\n        for ( let q = 0 ; q < 96 ; q++){\n        transpositions.forEach( t => {\n            //chords.push( chord7.map( x => x + t ) )\n            //chords.push( chordm.map( x => x + t + ( 7 * q )%12 ))\n            chords.push( chordm.map( x => x + t + ( 7 * q )%12 ))\n        })\n        if ( q === 8 ){\n            transpositions.forEach( t => {\n                chords.push( chord7.map( x => x + t + ( 7 * q )%12 ))\n            })\n        }\n        }\n        transpositions[  Math.floor(Math.random() * transpositions.length) ] = Math.floor(Math.random() * 12 - 2)\n    }\n    /*\n        for ( let q = 0 ; q < 12 ; q++){\n            transpositions.forEach( t => {\n                //chords.push( chord7.map( x => x + t ) )\n                //chords.push( chordm.map( x => x + t + ( 7 * q )%12 ))\n                chords.push( chord7.map( x => x + t + ( 7 * q )%12 ))\n            })\n        }\n        for ( let q = 0 ; q < 12 ; q++){\n            transpositions.forEach( t => {\n                //chords.push( chord7.map( x => x + t ) )\n                //chords.push( chordm.map( x => x + t + ( 7 * q )%12 ))\n                chords.push( chord7.map( x => x + t + ( 7 * q )%12 ))\n            })\n        }*/\n   // }\n    //chords = chords.slice(0,3)\n    // const rythme = [1,1,0,1,1,1,0,1,1] // BIEN\n    const rythme = [1,1,0,1, 1,1,0,1]\n    \n    const delayChain = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["DelayChain"])(ac, [[0.3,0.6]/*,[0.1,0.6]*/] )\n\n    const globalGain = ac.createGain()\n    \n        \n    \n    //distortion.connect( globalGain )\n   \n        \n    //delayChain.output.connect( OUTPUT )\n    delayChain.output.connect( globalGain )\n//    OUTPUT = delayChain.input\n    //distortion.connect( globalGain )\n    \n//     OUTPUT = delayChain\n    \n\n    //    console.log(\'noiseBuffer\',noiseBuffer)\n    function planify( /*chords, */t ){\n        //let t = 0\n        const ci = chordIdx % chords.length,\n              chord = chords[ ci ]\n        //chords.forEach( (chord,ci) => {\n        //const volumes = [ 0.5, 0.15, 0.25, 1/*0.25*/ ]\n        const volumes = [ 1.4, // chord\n                          1.1, // bass\n                          0.3,   // lament\n                          0.97,   // drums\n                          1.6,   // bass drum\n                          0.7    // hero\n                        ]\n        const sum = volumes.reduce((r,x)=>r+x,0)\n        const boost = 1.5\n        const vels = volumes.map( x => boost * x / sum )\n        \n        const endChord = playChord( chord, vels[0], t )\n        const dur = endChord - t\n          if ( ci > 3 )\n            playBass( chord, dur, vels[1], t )\n        \n        if ( ci > 7 )\n            playDrums( chord, dur, vels[3], t )\n        \n        //if ( ci > 9 )\n        //playLament( chord, dur, vels[2], t )\n        \n        if ( ci > 12 )\n            playBassDrum( chord, dur, vels[4], t )\n        \n        //const c32p = ci % 32\n        if ( ci > 16 )\n        //if ( ci %3 )\n            playHero( chord, dur, vels[5],t )\n        \n        //console.log(endChord,ac)\n        //t = endChord\n        //})\n        chordIdx++\n        return endChord\n    }\n\n    \n    const heroOsc = ac.createOscillator(),\n          heroGain = ac.createGain()\n    \n    const heroOscFrequency = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["apFrequency"])(heroOsc),\n          heroOscFrequencyLinearRamp = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["linearRampToValueAtTime"])(heroOscFrequency),\n          heroOscFrequencySetValueAtTime = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["setValueAtTime"])(heroOscFrequency),\n          heroGainGain = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["apGain"])(heroGain),\n          heroGainGainLinearRamp = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["linearRampToValueAtTime"])(heroGainGain),\n          heroGainGainSetValueAtTime = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["setValueAtTime"])(heroGainGain)\n\n    heroOsc.start( 0 )\n    heroOsc.connect( heroGain )\n    //heroGain.connect( delayChain.input )\n    heroGain.connect( delayChain.input )\n    //heroGain.connect( globalGain )\n    \n    heroGainGainSetValueAtTime( 0, 0 )\n    \n    function playHero( chord, dur, vel, t){\n     \n        const nnotes = rythme.length * 2 + Math.floor( Math.random() * 3 )\n        const choices = chord.flatMap( x => [x,x + 3,x-3,x+1,x-1])\n        const notes = []\n        for ( let i = 0 ; i < nnotes ;i++ ){\n            const rndNote = choices[ Math.floor( Math.random() * choices.length ) ]\n            notes.push( rndNote )\n        }\n        //const notes=[chord,chord,chord].flat()\n        const elDur = dur / notes.length\n        let end\n        \n        \n        /*\n        heroOsc.frequency.setValueAtTime( ktof(notes[0]), t )\n        heroGain.gain.setValueAtTime( 0, t )\n        */\n        heroOscFrequencySetValueAtTime( Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["ktof"])(notes[0]), t )\n        heroGainGainSetValueAtTime( 0, t )\n        \n\n        notes.forEach( (k,ki) => {\n            const f = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["ktof"])( k )\n            let start = t + ki * elDur\n            end = start + elDur\n            const t1 = start + 0.01 * dur,\n                  t2 = start + 0.99 * dur\n            //heroOsc.frequency.setValueAtTime( start )\n            heroOscFrequencyLinearRamp( f, t1 )\n            heroOscFrequencyLinearRamp( f, t2 )\n            /*heroOsc.frequency.linearRampToValueAtTime( f, t1)\n              heroOsc.frequency.linearRampToValueAtTime( f, t2)*/\n            \n            //gain.gain.setValueAtTime( 0, start )\n            heroGainGainLinearRamp( 0, start)\n            heroGainGainLinearRamp( vel, (start+t1)/2)\n            heroGainGainLinearRamp( vel, (end+t2)/2)\n            heroGainGainLinearRamp( 0, end)\n            /*\n            gain.gain.linearRampToValueAtTime( 0, start)\n            gain.gain.linearRampToValueAtTime( vel, (start+t1)/2)\n            gain.gain.linearRampToValueAtTime( vel, (end+t2)/2)\n            gain.gain.linearRampToValueAtTime( 0, end)\n            */\n\n            /*\n            if ( ki === ( notes.length - 1 ) ){\n                gain.gain.linearRampToValueAtTime( 0, end )\n            } else {\n                //gain.gain.linearRampToValueAtTime( vel/4, end )\n            }*/\n\n\n        })\n        \n        heroGainGainSetValueAtTime( 0, t + dur + 1 )\n    \n        \n        //heroOsc.start( t )\n        //heroOsc.stop( end ) \n        //heroOsc.connect( gain )\n        //gain.connect( delayChain.input )\n\n        //heroGainGainLinearRamp(0, t + dur+ 0.1 )\n        //heroOscFrequencyLinearRamp( 0, t + dur + 0.1 )\n       // heroGain.disconnect( delayChain.input )\n\n        //globalGain\n\n    }\n \n        const bdOsc = ac.createOscillator(),\n              bdGain = ac.createGain()\n        const bdOscFrequency = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["apFrequency"])(bdOsc),\n              bdOscFrequencySetValueAtTime = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["setValueAtTime"])(bdOscFrequency),\n              bdOscFrequencyLinearRamp = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["linearRampToValueAtTime"])(bdOscFrequency),\n              \n              bdGainGain = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["apGain"])(bdGain),\n              bdGainGainSetValueAtTime = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["setValueAtTime"])(bdGainGain),\n              bdGainGainLinearRamp = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["linearRampToValueAtTime"])(bdGainGain)\n        bdOsc.start( 0 )\n    //bdOsc.stop( end ) \n        bdOsc.connect( bdGain ).connect( globalGain )\n    bdGainGainSetValueAtTime( 0, 0 )\n\n    function playBassDrum( chord, dur, vel, t){\n        const rythme = [1,1,\n                        1,0,\n                        1,0,\n                        1,0]\n        const elDur = dur / rythme.length\n        let end\n\n\n        \n        rythme.forEach( (r,ri) => {\n            if ( r ){\n                let start = t + ri * elDur\n                end = start + Math.min(elDur-sample(10),0.5)\n\n                bdOscFrequencySetValueAtTime( 100, start )\n                bdOscFrequencyLinearRamp( 0, end )\n                \n                bdGainGainSetValueAtTime( 0, start )\n                bdGainGainLinearRamp( vel, start+sample(100) )\n                bdGainGainLinearRamp( 0, end )\n                \n                /*\n                bdOsc.frequency.setValueAtTime( 100, start )\n                bdOsc.frequency.linearRampToValueAtTime( 0, end )\n                gain.gain.setValueAtTime( 0, start )\n                gain.gain.linearRampToValueAtTime( vel, start+sample(100) )\n                gain.gain.linearRampToValueAtTime( 0, end )\n                */\n            }\n        })\n      \n\n    }\n    \n\n        const drumNoise = ac.createBufferSource(),\n              drumBiquad = ac.createBiquadFilter(),\n              drumGainNode = ac.createGain()\n   \n        const apDrumGainGain = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["apGain"])( drumGainNode ),\n              apDrumGainGainSetValueNow = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["setValueNow"])( apDrumGainGain ),\n              apDrumBiquadQ = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["apQ"])( drumBiquad ),\n              apDrumBiquadQSetValueNow = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["setValueNow"])( apDrumBiquadQ ),\n              //apBiquadQsetValueAtTime = setValueAtTime( apBiquadQ ),\n              //apBiquadQlinearRamp = linearRampToValueAtTime( apBiquadQ ),\n              apDrumBiquadFrequency = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["apFrequency"])( drumBiquad ),\n              //apBiquadFrequencySetValueNow = setValueNow( apBiquadFrequency ),\n              apDrumBiquadFrequencysetValueAtTime = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["setValueAtTime"])( apDrumBiquadFrequency ),\n              apDrumBiquadFrequencylinearRamp = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["linearRampToValueAtTime"])( apDrumBiquadFrequency )\n\n    drumNoise.buffer = noiseBuffer\n    drumNoise.loop = true\n    drumNoise.loopEnd = noiseBuffer.duration        \n\n\n    drumBiquad.type = "bandpass"\n\n    apDrumGainGainSetValueNow(0)\n\n    \n    drumNoise.connect(drumGainNode)        \n        .connect(drumBiquad)\n        .connect(globalGain)\n\n    drumNoise.start()\n\n    function playDrums( chord, dur, vel, t){\n     \n//        const flufshe = false\n\n        //const rythme = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]\n        //const rythme = [1,1,1,0,1,1,1,0,1,1,1,0,1,1,1]\n        let rythme =  [2,0,\n                      1,0,\n                      1,0,\n                      1,0,\n                      \n                      2,0,\n                      1,0,\n                      1,0,\n                      1,1]\n        // }\n\n        \n        //gainNode.gain.value = vel\n        \n        apDrumBiquadQSetValueNow(1)\n        apDrumGainGainSetValueNow(0)\n\n\n        \n        const snareEnvelope = {\n            values : [ 1.0, 0.8 ].map( x => x * vel ),\n            durations : [ sample(20), sample(500), sample(3000), sample(500) ]\n        }\n        //const envelope = handClapEnvelope\n        let end\n        let elDur = dur / rythme.length\n        /*\n        if ( flufshe ){\n            drumBiquad.Q.setValueAtTime( 10, t )\n            drumBiquad.Q.linearRampToValueAtTime( 1, t+dur/2 )\n            drumBiquad.Q.linearRampToValueAtTime( 5, t+dur )\n        }*/\n        \n        rythme.forEach( (on,ri) => {\n            const start = t + ri * elDur\n            if ( on === 1 ){\n                /*\n                end = adsr( gainNode.gain, envelope,  start )               \n                drumBiquad.frequency.setValueAtTime( ktof(chord[0])*4, start )\n                drumBiquad.frequency.linearRampToValueAtTime( ktof(chord[0])/4, end )\n                */\n                end = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["adsr"])( apDrumGainGain, snareEnvelope,  start )               \n                apDrumBiquadFrequencysetValueAtTime( Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["ktof"])(chord[0])*4, start )\n                apDrumBiquadFrequencylinearRamp( Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["ktof"])(chord[0])/4, end )\n            } else if ( on === 2 ){\n                \n                \n            }\n        })\n        /*\n          drumNoise.start(t)\n        drumNoise.stop(end)\n        */\n        \n    }\n    const bassOsc = ac.createOscillator(),\n          bassOscFrequencySetValueAtTime = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["setValueAtTime"])( Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["apFrequency"])( bassOsc ) ),\n          bassGainNode = ac.createGain(),\n          apBassGainGain = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["apGain"])(bassGainNode)\n    \n    //osc.frequency.value = f\n    bassOsc.type ="triangle"\n    bassOsc.connect(bassGainNode).connect( globalGain )\n    //gainNode.connect( delayChain.input )\n    \n    bassOscFrequencySetValueAtTime(0,0)\n    bassOsc.start( 0 )\n    function playBass( chord, dur, vel, t){\n\n        // get key\n        const tk = ( chord[0] % 12 )\n        const ambitus = [48-7,48+7]\n        const mk = KEYS\n              .filter( k => tk === k%12 )\n              .filter( k => ( k >= ambitus[0] ) && ( k <= ambitus[1] ) )\n        if ( mk.length === 0 ) return\n        if ( mk.length === 1 ){\n            mk.push( mk[0]-1)\n        }\n        const f = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["ktof"])( mk[0] )\n\n        const envelope = {\n            values : [ 1.0, 0.8 ].map( x => x * vel ),\n            durations : [ sample(100), sample(100), sample(4000), sample(500) ]\n        }\n        \n        //console.log(envelope)\n        rythme.forEach( (on,ri) => {\n            if ( on ){\n\n                const start = t + dur * ri / rythme.length\n                const end = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["adsr"])( apBassGainGain, envelope,  start )\n                const f = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["ktof"])( mk[ ri % mk.length ] )\n                //console.log(ri,mk[ ri % mk.length ] ,f)\n                //osc.frequency.setValueAtTime( f,  start)\n                bassOscFrequencySetValueAtTime( f,  start)\n            }\n        })\n        \n        //bassOsc.stop( t + dur )\n        \n        \n    }\n    // function makeDistortionCurve(amount=0.1) {\n    //     let n_samples = 512, curve = new Float32Array(n_samples);\n    //     for (let i = 0 ; i < n_samples; ++i ) {\n    //         let x = i * 2 / n_samples - 1;                \n    //         curve[i] = x//(Math.PI + amount) * x / (Math.PI + amount * Math.abs(x));\n    //     }\n    //     return curve;\n    // } \n    // function playLament( chord, dur, vel, t){\n    //     const f = ktof(chord[0]),\n    //           osc = ac.createOscillator(),\n    //           oscFrequencySetValueNow = setValueNow( apFrequency( osc ) ),              \n    //           gainNode = ac.createGain(),\n    //           gainGainSetValueNow = setValueNow( apGain( gainNode  ) )\n\n    //     // osc.frequency.value = f\n    //     oscFrequencySetValueNow( f )\n    //     gainGainSetValueNow( vel )\n    //     //gainNode.gain.value = vel\n        \n    //     osc.connect(gainNode)\n    //    // gainNode.connect( globalGain )\n    //     //gainNode.connect( delayChain.input )\n\n\n\n    //     let OUTPUT \n    //     {\n        \n    //         const distortion = ac.createWaveShaper(),\n    //               mod = ac.createOscillator(),\n    //               modFrequencySetValueNow = setValueNow( apFrequency( mod ) ),\n    //               gain = ac.createGain()\n            \n    //         distortion.curve = distoCurve\n            \n    //         //mod.frequency.value = 10\n    //         modFrequencySetValueNow(10)\n            \n    //         mod.start(t)\n    //         mod.stop(t+dur)\n    //         mod.connect( distortion )\n    //         distortion.connect( apGain( gain ) )\n            \n    //         OUTPUT = gain\n    //     }\n    //     OUTPUT.connect( globalGain )\n        \n    //     gainNode.connect( OUTPUT )\n    //     osc.start( t )\n    //     osc.stop( t + dur )\n    // }\n\n    \n    //chordOsc.start( t )\n\n    function playChord( chord, vel, t ){\n        \n        const wave = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["periodWaveFromKeys"])( ac, chord, fftFreqs )\n        \n        const chordOsc = ac.createOscillator(),\n              apChordOscFrequency = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["apFrequency"])( chordOsc ),\n              apChordOscFrequencySetValueNow = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["setValueNow"])( apChordOscFrequency ),\n              apChordOscFrequencySetValueAtTime = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["setValueAtTime"])( apChordOscFrequency ),\n              apChordOscFrequencylinearRamp = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["linearRampToValueAtTime"])( apChordOscFrequency ),\n              chordGainNode = ac.createGain(),\n              apChordGainGain = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["apGain"])( chordGainNode )\n              \n        chordOsc.setPeriodicWave(wave);\n        const vibratoEnvelope = {\n            values : [ 20, 22 ],\n            durations : [ 0.5, 1.5, 0.3 ]\n        }\n\n        const envelope = {\n            values : [ 1.0, 0.4 ].map( x => x * vel ),\n            durations : [ Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["ms"])(16), Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["ms"])(20), 2.0, 0.5 ]\n        }\n        // freq osc\n        //{\n        const chordModOsc = ac.createOscillator()\n        Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["setValueNow"])(Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["apFrequency"])( chordModOsc ))( 5 )\n        \n        //mod.frequency.value = 5\n        const chordModGain = ac.createGain()\n\n\n        \n        const vibEnvEnd = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["asr"])( Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["apGain"])(chordModGain), vibratoEnvelope, t )\n\n\n\n        chordModGain.connect( Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["apDetune"])(chordOsc) )\n        chordModOsc.connect( chordModGain )\n        chordModOsc.start(t)\n        chordModOsc.stop( vibEnvEnd )\n        //}\n        \n        \n        chordOsc.connect(chordGainNode).connect(delayChain.input)\n\n        //osc.frequency.value = fftFreqs.f0\n        apChordOscFrequencySetValueNow( fftFreqs.f0 )\n\n        const envEnd = Object(_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_0__["adsr"])( apChordGainGain, envelope,  t )\n\n        // slight up ramp for frequency\n        apChordOscFrequencySetValueAtTime( fftFreqs.f0, t )\n        //chordOsc.frequency.setValueAtTime( fftFreqs.f0, t )\n        apChordOscFrequencylinearRamp( fftFreqs.f0*1.02, envEnd )\n        //chordOsc.frequency.linearRampToValueAtTime( fftFreqs.f0*1.02, envEnd )\n        \n        chordOsc.start( t )\n        chordOsc.stop( envEnd )\n        t += ( envEnd - t ) * 1\n        return t\n    }\n\n    /*    function update(d){\n        const t = ac.currentTime,\n              t1 = t + 1 / 32\n \n       if ( d.gain ){\n            globalGain.gain.linearRampToValueAtTime( d.gain , t1 )\n        } else {\n            globalGain.gain.linearRampToValueAtTime( 0 , t1 )\n        }\n        \n    }*/\n    return {\n        globalGain,\n        //update,\n        ac\n    }\n}\n\n\n\n//# sourceURL=webpack:///./src/audio/music.js?')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _keyboardControllers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./keyboardControllers.js */ 8);\n/* harmony import */ var _levelCreator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./levelCreator.js */ 9);\n/* harmony import */ var _cols_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cols.js */ 11);\n/* harmony import */ var _maths_v1_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./maths/v1.js */ 2);\n/* harmony import */ var _maths_v2_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./maths/v2.js */ 1);\n/* harmony import */ var _roller_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./roller.js */ 12);\n/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./css.js */ 6);\n/* harmony import */ var _feedbackBuffer2_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./feedbackBuffer2.js */ 13);\n/* harmony import */ var _textMode_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./textMode.js */ 4);\n/* harmony import */ var _missions_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./missions.js */ 3);\n/* harmony import */ var _audio_playerNoises_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./audio/playerNoises.js */ 15);\n/* harmony import */ var _audio_oneShotSampler_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./audio/oneShotSampler.js */ 16);\n/* harmony import */ var _audio_webaudioUtils_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./audio/webaudioUtils.js */ 0);\n/* harmony import */ var _audio_music_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./audio/music.js */ 17);\n/* harmony import */ var _debug_measureFunction__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./debug/measureFunction */ 19);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//\n// sometime you wonder if you are just having an arbitrary life\n//\n\ndocument.body.style = _css_js__WEBPACK_IMPORTED_MODULE_6__[\"bodyStyle\"]\n\n// time measurement\n/*const Stats = require('stats.js')\n  var stats = new Stats();\n*/\n//stats.showPanel( 0 ); // 0: fps, 1: ms, 2: mb, 3+: custom\n//document.body.appendChild( stats.dom );\n\n\n\nconst ac = new AudioContext()\n/*\n  const sounds2 = {\n  start : [0.5,,1049,,.09,.25,,.45,,,442,.05,,.1,,,,.51,.08,.1],\n  nxt : [0.5,,1049,,.09,.25,,.45,,,442,.05,,.1,,,,.51,.08,.1],\n  checkl : [1.2,,1322,.05,.12,.03,1,.02,31,7.7,,,,,,,.27,.33,.04,.01],\n  //mssn : [2.3,,34,.02,,.04,2,2.05,,1,-14,.16,,.8,,,.09,,.16,.17],\n  strt : [3.3,,565,.04,.19,0,,.33,,-4.1,,,,,,,.12,.05,,.55],\n  //mssn : [1.7,,27,.02,.16,.18,3,.7,,-0.7,,,,.1,,,,.34,.21,.09], // prout\n  //mssn : [,,1632,,.09,.12,,1.52,,,,,.09,,,,.09,.59,.08],\n  mssn : [0.9,,1,,.09,.03,,.69,14,2,,,,.1,1.4],\n  //z : [1.2,,674,.07,.18,.01,,.9,-25,,,,.02,.7],\n  slw : [1.5,,803,.05,.43,.55,,1.86,,,-97,.02,.27,,,,,.64,.04],\n  ///l1 : [2.7,,72,.01,,.32,2,1.51,,-0.6,,,.02,,,,.07,.63],\n  sll : [2.2,,476,.04,.09,.64,4,3.96,.2,,,,,1,,.4,,.55,.04],\n  l2 : [0.8,,29,,.21,.15,4,1.63,,.7,-137,.03,,,,,.11,,.1]\n  }*/\nlet SOUND\n// {\n//     const duration = 0.2\n\n//     const gGainGainEnveloppe = undefined\n//     /*// undefined/\n//         0,\n//         0.001,       1,\n//         0.015,       0.3,\n//         0.5,        0\n//     ]*/\n//     const oscFrequencyEnveloppe = undefined\n//     const oscGainGainEnveloppe = [0,\n//                                 0.001,1,\n//                                 0.015,1,\n//                                 0.02,0\n//                                ]\n\n//     const noiseGainGainEnveloppe = [0,\n//                                 0.001,3,\n//                                 0.015,3,\n//                                 0.02,0\n//                                ]\n//     const noisePlaybackRateEnveloppe = [1,0.5,0.9]\n\n//     const modFrequencyEnveloppe = [100]\n//     const modGainGainEnveloppe = [1000,0.05,100,0.5,1000]\n\n//     const biquadFrequencyEnveloppe = [1000,0.5,0.1]\n//     const biquadQEnveloppe = [10]\n\n//     const delayDelayTimeEnveloppe = [0.002,0.5,0.2]\n//     const delayDelayGainEnveloppe = [0.9,0.5,1]\n\n//     const ordered =  [\n//         duration,\n//         gGainGainEnveloppe,\n//         oscFrequencyEnveloppe,\n//         oscGainGainEnveloppe,\n//         noiseGainGainEnveloppe,\n//         noisePlaybackRateEnveloppe,\n//         modFrequencyEnveloppe,\n//         modGainGainEnveloppe,\n//         biquadFrequencyEnveloppe,\n//         biquadQEnveloppe,\n//         delayDelayTimeEnveloppe,\n//         delayDelayGainEnveloppe\n//     ]\n//     SOUND= ordered\n//     console.log('ORDERED SOUND*********************')\n//     console.log( JSON.stringify( ordered ).replace(/null/g,'') )\n//     console.log('*********************ORDERED SOUND')\n// }\n// monte bulle fantaise\nlet sounds\n{\n    const SOUND_BULLE = [1,[0,0.05,0.5,0.3,1,0.2,0],[250,0.2,520],[0,0.01,0.4,2,0.01,3,1],[0],[1,0.01,5,0.1,0.2,0.5,0],[1],[0],[1000,-0.35,2000,0.5,800,0.45,2000,4,4000],[1,0.5,5,1,0],[1,0.5,0.25,0.25,0.75,0.1,0.1,1,0],[1,0.5,0.25,1,0.3]]\n    // tactactac\n    const SOUND2 = [0.5,[1.25],[1,400,0.3,200],[1,0,0.01,4,0.04],[1,0.01,0],,[1,1,1000],[200],[5000,-0.5,100,1,300],[10,0.5,1,1,20],[0.1,1,0.05,1.5,5],[0.8,1,0.9]]\n\n    // tole\n    const SOUND3 = [2,[1,2,0],,[0],,[0.01,-1,4],,,,,[0.1],[1,1,0.5]]\n\n    // bip\n\n    const SOUND_BIP = [0.1]\n    const SOUND_BIP2 = [0.1,[0, 0.01,1, 0.02,0.1, 0.1,0]]\n    const SOUND_PFOAN = [0.5,,,[1],[0],,[100],[1000,0.5,100],,,,]\n\n    const SOUND_TOC = [0.1,[1],,[0,0.001,1,0.015,1,0.02,0],[0,0.001,3,0.015,3,0.02,0],[1,0.5,0.9],[100],[1000,0.05,100,0.5,1000],[1000,0.5,0.1],[10],[0.002,0.5,0.2],[0.9,0.5,1]]\n    sounds = {\n        // _test : SOUND,\n        nxt :  SOUND_BIP,\n        start :  SOUND3,\n        checkl :  SOUND_BIP2,\n        mssn :SOUND2,\n        slw :SOUND_BULLE,\n        sll :SOUND_TOC,\n        l2 :SOUND_PFOAN,\n    }\n}\n\n\n\n\n// win [,,506,.06,.26,.36,2,.45,.2,-1.1,282,.01,.04,,,,.01,.83,.02]\nconst oneShotSampler = Object(_audio_oneShotSampler_js__WEBPACK_IMPORTED_MODULE_11__[\"OneShotSampler\"])(ac, sounds)\nconst oneShot = oneShotSampler.players\nconst playerNoises = Object(_audio_playerNoises_js__WEBPACK_IMPORTED_MODULE_10__[\"PlayerNoises\"])(ac)\nconst musicPlayer = _audio_music_js__WEBPACK_IMPORTED_MODULE_13__[\"play\"](ac)\nconst out = ac.createBiquadFilter()\nout.type = 'lowpass'\nout.frequency.value = 2500\nout.connect( ac.destination )\n\noneShotSampler.globalGain.connect( out )\noneShotSampler.globalGain.gain.value = 0.6\nplayerNoises.globalGain.connect( out )\nplayerNoises.globalGain.gain.value = 1.0\nmusicPlayer.globalGain.connect( out )\nmusicPlayer.globalGain.gain.value = 0.9\n/*\ndocument.body.onkeypress = (e) => {\n    if ( e.repeat ) return\n    //    oneShot._test()\n}\n*/\n/*\n  musicPlayer.globalGain.gain.value = 0.0\n  playerNoises.globalGain.gain.value = 0.0\n  oneShotSampler.globalGain.gain.value = 1.0\n*/\n/*\n  offline\n  Record(2,ac.sampleRate * 60,ac.sampleRate,\n  ac => {\n  const musicPlayer = Music.play( ac )\n  musicPlayer.globalGain.connect( ac.destination )\n  musicPlayer.globalGain.gain.value = 1.0           \n  },\n  buffer => {\n  console.log('rendered',buffer)\n  playBuffer( ac, buffer, ac.destination, ac.currentTime, false )\n  },\n  ratio => {\n  console.log('progress',ratio*100,\"%\")\n  })\n*/\n/*\n  import { PAD } from './pad.js'\n  console.log(PAD)\n*/\n\nconst ar = 16/9\nconst targetSize = {\n    width : 256,\n    height : Math.floor(256/ar)\n}\n\nfunction Display(){\n    \n    // 300 / 600 rect / ms\n    \n    const canvas = document.createElement('canvas')\n    \n    canvas.width =  targetSize.width \n    canvas.height = targetSize.height    \n    canvas.setAttribute('name','MONMON')\n    canvas.style = _css_js__WEBPACK_IMPORTED_MODULE_6__[\"canvasStyle\"]//'position: absolute ; top : 200px ; left : 0px;'   \n    document.body.appendChild( canvas )\n    const context = canvas.getContext('2d')\n\n    const feedbackBuffer = Object(_feedbackBuffer2_js__WEBPACK_IMPORTED_MODULE_7__[\"FeedbackBuffer\"])( context )\n    \n    const textMode = Object(_textMode_js__WEBPACK_IMPORTED_MODULE_8__[\"TextMode\"])( textScreen, _textMode_js__WEBPACK_IMPORTED_MODULE_8__[\"font1\"] )\n    \n    const nominalScale = 8\n    //const nominalScale = 2//32\n    \n    const camera = {\n        //center : { ...startPosition },\n        center : { x:0,y:0},\n        scale : nominalScale,\n        nominalScale\n    }\n    //const canvas = context.canvas,\n    const hcWidth = canvas.width / 2,\n          hcHeight = canvas.height / 2\n    \n    function draw( { center, scale }, level, player,\n                   particles, timeoutBar, lifeBar, remainingTo, Cols ){\n        \n        \n        function drawMap(){\n            const { map, width, height,\n                    ij2idx, outij } = level\n            const  cpx = center.x + 0.5,\n                  cpy = center.y + 0.5,\n                  //vismap = {\n                  l = Object(_maths_v1_js__WEBPACK_IMPORTED_MODULE_3__[\"clamp\"])(Math.floor( cpx - hcWidth / scale ),0,width-1),\n                  r = Object(_maths_v1_js__WEBPACK_IMPORTED_MODULE_3__[\"clamp\"])(Math.ceil( cpx + hcWidth / scale ),0,width-1),\n                  b = Object(_maths_v1_js__WEBPACK_IMPORTED_MODULE_3__[\"clamp\"])(Math.floor( cpy - hcHeight / scale ),0,height-1),\n                  t = Object(_maths_v1_js__WEBPACK_IMPORTED_MODULE_3__[\"clamp\"])(Math.ceil( cpy + hcHeight / scale ),0,height-1)\n\n            for ( let i = l ; i < r  ; i++ ){\n                for ( let j = b ; j < t ; j++ ){\n                    let col\n                    if ( outij(i,j) ){\n                        col = [1,0,0]\n                    } else {\n                        const c = map[ ij2idx( i,j ) ]\n                        col = Cols[c] || [1,0,0]\n                    }\n                    col = [...col]\n                    //col[0]+=0.9*Math.random()\n                    const rgba = csshsl( ...col ),\n                          x = Math.floor( (i - cpx) * scale + hcWidth ),\n                          y = Math.floor( (j - cpy) * scale + hcHeight )\n                    context.fillStyle = rgba\n                    //context.fillRect(x, y, scale-1, scale-1)\n                    //context.fillRect(x, y, scale, scale)\n                    //context.fillRect(x+1, y+1, scale-1, scale-1)\n                    context.fillRect(x, y, scale, scale)\n                }\n            }\n        }        \n        function box2screen( x,y,w,h, target ){\n            target[0] = (x - w/2 - center.x) * scale + hcWidth\n            target[1] = (y - h/2 - center.y) * scale + hcHeight\n            target[2] = w * scale\n            target[3] = h * scale\n            return target\n        }\n        function drawPlayer( context, { center, scale } )\n        {\n            const sb = []\n            const dim = 1\n            let col\n            if ( player.hasCollision ){\n                col = [player.energy/2,0.2 * Math.random(),0.05 * Math.random()]\n            } else {\n                col = [Math.pow(player.energy,0.25),0,0]\n            }/*\n               \n               if (( player.hasCollision )&&(Math.random()<0.8)){\n               col = [ 1 - player.energy / 1000,Math.random(),Math.random()]\n               } else {\n               col = [ 1 - player.energy / 1000,0,0]\n               }\n             */\n            //            console.log(player.energy)\n            context.fillStyle = cssrgba( ...col/*NOMINAL_ENERGY*/)\n            context.fillRect( ...box2screen( player.position.x,\n                                             player.position.y,\n                                             dim, dim, sb ) )\n        }\n        function drawParticle( context, { center, scale }, { color, position, dim },  i ){\n            const sb = []\n            context.fillStyle = cssrgba(...color)\n            context.fillRect( ...box2screen( position.x,\n                                             position.y,\n                                             dim, dim, sb ) )\n        }\n        function drawTimeoutBar(){\n            const height = 10\n            context.fillStyle = cssrgba(1,1,1,0.25)\n            context.fillRect(0,canvas.height-height,\n                             canvas.width*timeoutBar.remain,canvas.height)\n        }\n        function drawLifeBar(){\n            let { l, L } = lifeBar\n            const dim = 10,\n                  margin = 2\n            let x = margin\n            context.fillStyle = cssrgba(0,0,0,0.5)\n            context.fillRect(\n                0,0,\n                (   dim + margin)*L+margin,\n                dim+2*margin\n            )\n            function drawUnit(){\n                context.fillRect(x,margin,dim,dim)\n                x += dim + margin\n            }\n            context.fillStyle = cssrgba(1,0,0,1)\n            for ( let i = 1 ; i <= l ; i++ ){\n                drawUnit()\n            }\n            context.fillStyle = cssrgba(0.2,0.2,0.2,1)\n            for ( let i = l+1 ; i <= L ; i++ ){\n                drawUnit()\n            }\n            \n            \n        }\n        //const draws = [\n            //() => {\n        context.fillStyle = 'rgba(0,0,0,1)'\n        context.fillRect(0,0,canvas.width,canvas.height)\n        //},\n        //  () => {\n        if (level && level.vis) drawMap()\n        //},\n        //            () => {\n        if ( textMode.vis ) textMode.draw()\n        //          },\n        //        () => {\n        const dx = Math.floor( ( canvas.width - textMode.canvas.width  )/ 2 ),\n              dy = Math.floor( ( canvas.height - textMode.canvas.height ) / 2 )\n        if ( textMode.vis ) context.drawImage( textMode.canvas,dx,dy )\n        //},\n        //    () => {\n        if ( player.vis ) drawPlayer( context, camera)\n        //  },\n        //() => {\n        particles.els.forEach( (particle,i) => {\n            if ( particle.vis )\n                drawParticle( context, camera, particle, i )\n        })\n        //            },\n        //            () => {\n        if ( timeoutBar.vis ){\n            drawTimeoutBar()\n        }\n        //          },\n        //        () => {\n        feedbackBuffer.alter(context)\n        //      },\n        //    () => {\n        if ( lifeBar.vis ){\n            drawLifeBar()\n        }\n        //  }\n//    ]\n        //const start = Date.now()\n        //return [ ...draws.map( measureFunction.time ), Date.now() - start ]\n        \n    }\n    return { draw, camera, feedbackBuffer, textMode }\n}\n\n\nfunction cssrgba( r01,g01,b01,a=1){\n    const r = Math.floor( 256 * r01 ),\n          g = Math.floor( 256 * g01 ),\n          b = Math.floor( 256 * b01 )\n    return `rgba(${r},${g},${b},${a})`\n}\nfunction csshsl( h,s,l){\n    return `hsl(${360*h},${100*s}%,${100*l}%)`\n}\nfunction posCollide( level, pos, cells ){\n    const { ij2idx, map, outij } = level,\n          i = Math.round(pos.x),\n          j = Math.round(pos.y)\n    if ( !outij(i,j) ) {\n        const c = map[ ij2idx( i,j ) ],\n              collides = cells.includes( c )\n        return collides\n    }\n}\n\nfunction movePlayer( player, level, dx, dy, dt, ff){\n    const pmp = player.position,\n          nextPosition = Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_4__[\"cloneV2\"])(pmp)\n\n    nextPosition.y+= dt/1000000\n    \n    let hasCollision = false,\n        collisionType = 0\n    for ( let i = 3 ; i >= 1 ; i-- ){\n        if ( i&1 ) nextPosition.x += dx * dt / ff\n        if ( i&2 ) nextPosition.y += dy * dt / ff  \n        const collide = posCollide( level, nextPosition, ['*'] )\n        if ( !collide ) break;\n        hasCollision = true\n        collisionType = i\n        Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_4__[\"copyV2\"])(pmp,nextPosition)\n    }\n    return {\n        nextPosition,\n        hasCollision,\n        collisionType,\n        dx,\n        dy\n    }\n}\n\nfunction GameState(){\n\n    const state = {\n        name : 'I',\n        T : 0,\n        t : 0\n    }\n    const timeouts = [] \n    function update( ...ps ){\n        // console.log('update',...ps)\n        Object.assign( state, ...ps )\n    }\n\n\n    const NLIVES = 3\n    const NOMINAL_ENERGY = 1\n\n    // debug REMOVEME\n    let FIRST_LEVEL = 0 \n    let FIRST_SUBLEVEL = 0\n    const url_param_level = parseInt( new URL(document.URL).searchParams.get(\"level\") )\n    const url_param_sublevel = parseInt( new URL(document.URL).searchParams.get(\"sublevel\") )\n    if ( ! ( isNaN(url_param_level) || isNaN( url_param_sublevel ) ) ) {\n        console.log('setting level to ',url_param_level)\n        console.log('setting sublevel to ',url_param_sublevel)\n        FIRST_LEVEL = url_param_level\n        FIRST_SUBLEVEL = url_param_sublevel\n    }\n    // gubed\n    \n    const automata = {\n        I : { 'start' : d => update({name:'I0'}) },\n        // intro\n        I0 : {\n            '>' : () => {\n                timeout( () => event('next'),4000)\n            },\n            'next' : () => {\n                update({name:'I1'})\n                oneShot.nxt()\n            }\n        },\n        // title\n        I1 : {\n            '>' : () => {\n                timeout( () => event('story'),10000)\n            },\n            'next' : () => {\n                oneShot.start()\n                update({name:'I2'})\n            },\n            'story' : () => {\n                update({name:'I1S'})\n            }\n        },\n        // story\n        I1S : {\n            '>' : () => {                \n                timeout( () => event('next'),10000)\n            },\n            'next' : () => {\n                oneShot.nxt()\n                update({name:'I1'})\n            },\n        },\n        // story+controls\n        I2 : {\n            'next' : () => {\n                oneShot.nxt()\n                update({\n                    name:'I3',\n                    level : FIRST_LEVEL,\n                    sublevel : FIRST_SUBLEVEL,\n                    L : NLIVES,\n                    lives : NLIVES,\n                    energy : NOMINAL_ENERGY,\n                    nlevels : _missions_js__WEBPACK_IMPORTED_MODULE_9__[\"Missions\"].length,\n                    //E : NOMINAL_ENERGY,\n                })\n            },\n        },\n        // ... snd screen\n        I3 : {              \n            'next' : () => {\n                oneShot.mssn()\n                update({name:'M1'})\n            }\n        },\n        // level briefing\n        M1 : {\n            '>' : () => {                \n                update({                    \n                    nsublevels : _missions_js__WEBPACK_IMPORTED_MODULE_9__[\"Missions\"][ state.level ].subs.length\n                })\n            },\n            'next' : () => {\n                update({name:'S1'})\n            },\n        },\n        // sublevel briefing\n        S1 : {\n            '>' : () => {\n                oneShot.mssn()\n                update({\n                    choices: Object(_levelCreator_js__WEBPACK_IMPORTED_MODULE_1__[\"mkChoices\"])(state.level,state.sublevel),\n                    energy : NOMINAL_ENERGY,\n                })\n            },\n            'next' : () => {\n                update({name:'S2'})\n            },\n        },                 \n        \n        // ready set go\n        S2 : {\n            '>' : () => {\n                oneShot.nxt()\n                timeout( () => event('next'),4000)\n            },\n            'next' : () => {\n                update({name:'S3'})\n                oneShot.checkl()\n            },\n            \n        },\n        S3 : {\n            'checkLine' : num => {\n                //state.checkLines.push( { num, t : state.T } )\n                oneShot.checkl()\n                // console.log('state.checkLines',state.checkLines)\n            },\n            'damage' : d => {\n                const energy = state.energy - d\n                if ( energy  > 0 ){\n                    update( { energy } )\n                } else {\n                    event('sublevel-lose')\n                }\n            },\n            'sublevel-win' : d =>{\n                update({ name : 'W1' })\n                oneShot.slw()\n            },\n            'sublevel-lose' : d => {\n                oneShot.sll()\n                update( {\n                    name : 'L1',\n                    lives : state.lives - 1\n                } )\n            }\n        },\n        // sublevel won\n        W1 : {\n            'next' : () => {\n                //oneShot.slw()\n                const sublevel = state.sublevel + 1\n                if ( sublevel < state.nsublevels ){\n                    update({\n                        sublevel,\n                        name : 'S1'\n                    })\n                } else {\n                    update({\n                        sublevel,\n                        name : 'W2'\n                    })\n                }\n            }\n        },\n        // level won\n        W2 : {\n            'next' : () => {\n                const level = state.level + 1\n                if ( level < state.nlevels ){\n                    const lives = state.lives + 1,\n                          L = Math.max(state.L,lives)\n                    update({\n                        sublevel : 0,\n                        level,\n                        lives,\n                        L,\n                        name : 'M1'\n                    })\n                } else {\n                    update({\n                        level,\n                        name : 'W3'\n                    })\n                }\n            }\n        },\n        // congratulations, thanks for playing\n        'W3' : {\n            '>' : d => {\n                oneShot.slw()\n            }\n        },\n        L1 : {\n            '>' : d => {\n            },  \n            'next' : d => {\n                const lives = state.lives \n                if ( lives > 0 ){\n                    update({name:'S1'})\n                } else {\n                    update({name:'L2'})\n                }\n            }\n        },\n        // game lost animation\n        L2 : {\n            'next' : d => update({\n                name:'I0',\n            })\n        }\n    }\n    \n    function timeout( f, delay ){\n        const start = state.T,\n              end = start + delay,\n              idx = timeouts.findIndex( o => o.end > end ),\n              to = { start, end, delay, f }\n        timeouts.splice((idx>0)?idx:0, 0, to)\n    }\n    function clearTimeouts(){\n        timeouts.length = 0\n    }\n    function checkTimeouts(T){\n        state.T = T\n        const first = timeouts[ 0 ]\n        if ( first ) {\n            const now = T\n            if ( now >= first.end ){\n                first.f()\n            }\n            return Object(_maths_v1_js__WEBPACK_IMPORTED_MODULE_3__[\"clamp\"])( ( first.end - T ) / first.delay,0,1)\n        }\n    }\n    function event(eName,eData){\n        clearTimeouts()\n        const cStateName = state.name\n        try {\n            const sm = automata[ cStateName ]\n            /*const to = sm[ '#' ]\n              if ( to ){\n              timeout( () => event('next'), to )\n              }*/\n            const mh = sm[ eName ]\n            mh(eData)\n        } catch (e){\n            //console.error('wrong message?',cStateName,eName,{state, eName, eData},e)\n        }\n        if ( cStateName !== state.name  ){\n            \n\n            //\n            state.t = state.T\n            \n            // enter state f\n            const sm = automata[ state.name ]\n            const enter = sm['>']\n            if ( enter ){\n                enter()\n            }\n            // console.log('STATE CHANGE',cStateName,'->',state.name)\n        }\n    }\n    //setInterval( checkTimeouts, 200 )\n\n    return {state,event,checkTimeouts}\n\n    \n}\n\nfunction Player(){\n    return {\n        vis : true,\n        position : Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_4__[\"V2\"])(0,0),\n        lastpos : Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_4__[\"V2\"])(0,0)\n    }\n}\nfunction Particles(){\n    const PARTICLE_COUNT = 25\n    const els = []\n    for ( let i = 0 ; i < PARTICLE_COUNT ; i++ ){\n        els[i] = {\n            dim : 0.25,\n            vis : true,\n            position : {\n                x : 10,\n                y : 10\n            },\n            color : [1,1,1,1]\n        }\n    }\n    return {\n        idx : 0,\n        els\n    }\n}\nfunction TimeoutBar(){\n    return {\n        vis : true,\n    }\n}\nfunction LifeBar(){\n    return {\n        vis : true,\n        l : 5, // current\n        L : 5 // max\n    }\n}\nconst textScreen = Object(_textMode_js__WEBPACK_IMPORTED_MODULE_8__[\"TextScreen\"])( 30, 16 )\n\n\n\nconst keyboardController = Object(_keyboardControllers_js__WEBPACK_IMPORTED_MODULE_0__[\"KeyboardControllers\"])()\nconst gameState = GameState()\nconst display = Display()\nconst player = Player()\nconst particles = Particles()\n//const texts = Texts()\nconst timeoutBar = TimeoutBar()\nconst lifeBar = LifeBar()\n\n\n\nconst step = (dt,T) =>{\n    const timeoutBarVisibility = ['G1','S1','S2','L1']\n    const mapVisibility = ['S2','S3','W1','W2','L1']\n    const playerVisibility = ['S2','S3']\n    const lifeBarVisibility = ['S1','S2','S3','W1','W2','L1']\n\n    function stateName(){\n        return gameState.state.name\n    }\n    function stateNameIs(n){\n        return gameState.state.name === n\n    }\n    function stateIsOneOf( ...names ){\n        return names.flat().includes( stateName() )\n    }\n    \n    \n    if ( stateNameIs('S2') ){\n        Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_4__[\"copyV2\"])(gameState.state.choices.startPosition, player.position)\n    }\n    \n    const camera = display.camera\n    const choices = gameState.state.choices\n\n    // check timeouts\n    const remainingTo = gameState.checkTimeouts(T)\n    timeoutBar.remain = remainingTo\n    //timeoutBar.vis =  (remainingTo !== undefined)   && timeoutBarVisibility.includes( stateName() )\n    timeoutBar.vis =  (remainingTo !== undefined)   && stateIsOneOf(timeoutBarVisibility)\n    \n    if ( keyboardController.anyKeyStroke.length ){\n        //  textScreen.cls()\n    }\n    const TIME_BEFORE_SKIP_STATE = 1000\n    // grab input\n    //    stats.begin()\n\n    const sinceStateStart = T - gameState.state.t\n    \n    /*\n      if ( ['I0','I1','G0','G1','G2','S1',\n      'L1','L2','W2','W3','R0'].includes( stateName() ) ){*/\n    if ( !stateIsOneOf('S2','S3') ){\n        \n        if ( sinceStateStart > TIME_BEFORE_SKIP_STATE ){\n            if ( keyboardController.anyKeyStroke.length ){\n                //console.log('to!')\n                gameState.event('next')\n            }\n            textScreen.print(15,14,\"any key to skip\")\n        }\n    }\n    \n    const [[l,r],[d,u],[o,p]] = keyboardController.axesCtrlState\n    keyboardController.resetKeyStrokes()\n\n    let HASCOLLIDSION = false,\n        DAMAGE = 0,\n        WALLDIST = undefined\n    \n    let collision\n    if ( stateIsOneOf(['S3','W1','W2']) ){\n        //\n        // move and collisions\n        //\n        const { level, sublevel, nsublevels } = gameState.state\n        const spd = _missions_js__WEBPACK_IMPORTED_MODULE_9__[\"Missions\"][level].subs[sublevel].spd || 0.5\n\n        const speed01 = spd,\n              minspeed = 160,\n              maxspeed = 15,\n              ff = (1-speed01) * minspeed + speed01 * maxspeed\n        let dx,dy\n        if ( stateNameIs('S3') ){\n        //if ( ['S3'].includes( stateName() ) ){\n            dx = 1\n            //dx = ( -1*l + r ) \n            dy = ( -1*u + d )\n        } else {\n            dx = 2\n            dy = 0\n        }\n        collision = movePlayer( player,\n                                choices, dx, dy, dt, ff )\n        \n        const { nextPosition, hasCollision, collisionType } =  collision\n\n        Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_4__[\"copyV2\"])(player.position,player.lastpos)\n        Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_4__[\"copyV2\"])(nextPosition,player.position)\n        \n        if ( stateIsOneOf(['S3']) ){\n            \n            // check victory\n            if ( posCollide( choices, nextPosition, 'G' ) ){\n                gameState.event('sublevel-win')\n            }\n            \n            // check damage\n            if ( hasCollision ){\n                HASCOLLIDSION  = true\n                const df = (collisionType !== 2)?5:1\n                const damage = ( dt / 1500 ) * df\n                DAMAGE = damage\n                gameState.event('damage',damage)\n            }\n        }\n    }\n\n    if( stateNameIs('S3') ){\n        // checkLaps\n        //  if (gameState.state.choices) {\n        const choices = gameState.state.choices.choices\n        // console.log( player.position,player.lastpos )\n        let idx = -1\n        for ( let i = 0 ; i < choices.length ; i++ ){            \n            const x = choices[ i ].x\n            if ( ( player.lastpos.x < x ) && ( x <= player.position.x ) ){\n                idx = i\n                break\n            }\n        }\n        if ( idx !== -1 ){\n            gameState.event('checkLine',idx, choices.length - 2)\n            // console.log('step',idx,'/', choices.length - 2)\n        }\n        //        }\n        // front raycast\n        function frontRaycast( position, length, types ) {\n            const { ij2idx, map } = gameState.state.choices,\n                  ix = Math.round( position.x ),\n                  iy = Math.round( position.y )\n            for ( let i = 0 ; i < length ; i++ ){\n                if ( types.includes( map[ ij2idx(ix+i,iy) ] ) ){\n                    return i\n                }\n            }\n        }\n        const rayLength = 60\n        const wallDist = frontRaycast( player.position, rayLength,['*'] )\n        if ( wallDist !== undefined ){\n            const wallProx = Object(_maths_v1_js__WEBPACK_IMPORTED_MODULE_3__[\"clamp\"])((rayLength - wallDist - 1) / ( rayLength - 2 ),0,1 )\n            WALLDIST = wallProx\n            //// console.log('seen',wallProx)\n        }\n        \n    }\n\n    camera.scale *= ( 1 + ( -1*o + p ) / 10 ) \n    camera.scale = Object(_maths_v1_js__WEBPACK_IMPORTED_MODULE_3__[\"clamp\"])( camera.scale, 4,32) // 4 wide zoom, 32 closeup\n\n    if ( choices ){\n        choices.vis = stateIsOneOf(mapVisibility)\n    }\n    player.vis = stateIsOneOf(playerVisibility)\n    player.energy =  gameState.state.energy\n    player.hasCollision = HASCOLLIDSION\n\n    \n    \n    \n    particles.hasCollision = HASCOLLIDSION\n    {\n        // const running =  ['S3'].includes( stateName() )\n\n        const target = player.position\n        updateParticles( particles, target, HASCOLLIDSION, collision,gameState.state.energy,  stateName() )\n    }\n    //if ( choices ) choices.vis = true\n    if ( ( gameState.state.lives !== undefined )\n         && ( gameState.state.lives !== undefined) ){\n        lifeBar.l = gameState.state.lives\n        lifeBar.L = gameState.state.L\n    }\n    lifeBar.vis = lifeBarVisibility.includes(  stateName() )\n    Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_4__[\"copyV2\"])( player.position, camera.center )\n    \n\n\n    playerNoises.update({\n        energy : gameState.state.energy,\n        hasCollision : HASCOLLIDSION,\n        damage : DAMAGE,\n        wallDist : WALLDIST,\n        gain : 1,\n        \n    })\n    const printCenter = textScreen.printCenter\n\n    function printMission(showDirs,showFailure, showSublevelWin, showLevelWin ){\n        const { level, sublevel, nsublevels } = gameState.state\n        const ml = _missions_js__WEBPACK_IMPORTED_MODULE_9__[\"Missions\"][ level ],\n              ms = ml.subs[ sublevel ]\n        \n        printCenter(1,`Mission #${level+1}`)\n        printCenter(3,`\"${ml.name}\"`)\n        if ( !showLevelWin){\n            printCenter(5,`Hop #${sublevel+1}/${nsublevels}`)\n            printCenter(7,`\"${ms.name}\"`)\n        }\n        if ( showDirs ){\n            printCenter(9,'you follow the directions:')\n            printCenter(11,gameState.state.choices.directions.join('.'))\n        }\n        if ( showFailure ){\n            printCenter(9,'you did not make it!')\n            printCenter(11,'* hop failed *')\n        }\n        if ( showSublevelWin ){\n            printCenter(9,'* hop successful *')\n            printCenter(11,'you made it!')\n        }\n        if ( showLevelWin ){\n            printCenter(9,'* mission cleared! *')\n        }\n        /*\n          let j = 4\n          for ( let i = 0 ; i < nsublevels ; i++ ){\n          //if ( i < level ){\n          printCenter(j,`\"${ml.subs[i].name}\"`)\n          j++\n          //}\n          }*/\n        for ( let j = 0 ; j < (level+1) ; j++ ){\n            //printCenter(6,`\"${ms.name}\"`)\n        }\n        //printCenter(j,`Hop #${sublevel+1}/${nsublevels}`)\n        //printCenter(4,`Hop #${sublevel+1}/${nsublevels}`)\n        //printCenter(6,`\"${ms.name}\"`)\n    }\n    \n    display.textMode.vis = true\n    textScreen.cls()\n    if ( ['I2','I1S'].includes(stateName()) ){\n        printCenter(1,'The Odyssey Begins...')\n        const paragraphs = 'So many years have passed since your days as a newborn electron, freely roaming in some metallic conductor...\\n\\nThe time has come for you to start your wondeful journey and fulfill your duty for the almighty gods of electrons to be pleased.'\n        textScreen.printParagraphs( 3, paragraphs, 0 )\n        \n        //textScreen.print(0,5,'\"Follow the correct route, ignore the incorrect one or you will die\", you can remember your electron mother say. This is your life, now !')\n        //textScreen.print(0,8,'Mission are awaiting you. May the god of electrons be with you.')\n\n    } else  if ( ['I3'].includes(stateName()) ){\n        printCenter(1,'The Odyssey Begins...')\n        \n        const paragraphs = 'Now your destiny is to always follow the correct route. Every electron knows what happens when you fail to follow the correct route...\\n\\n404 : Electronic DEATH!\\n\\nSo ALWAYS remember the ordered up and down branches of the route!\\n\\nGOOD LUCK!'\n        textScreen.printParagraphs( 3, paragraphs, 0 )\n        \n        //textScreen.print(0,5,'\"Follow the correct route, ignore the incorrect one or you will die\", you can remember your electron mother say. This is your life, now !')\n        //textScreen.print(0,8,'Mission are awaiting you. May the god of electrons be with you.'){\n    }\n\n    else if ( ['M1'].includes(stateName()) ){\n        printMission()\n    } else if ( ['G1'].includes(stateName()) ){\n        printCenter(6,'level presentation')\n        writeMission( textScreen, gameState.state.level )\n    } else if ( ['G2'].includes(stateName()) ){\n        printCenter(6,'sublevel'+gameState.state.sublevel, true )\n        /*writeMission( textScreen,\n          gameState.state.level || 1,\n          gameState.state.sublevel || 1,\n          undefined)*/\n        //(gameState.state.choices && gameState.state.choices.directions) || [0])\n    } else if ( ['I1'].includes(stateName()) ){\n        printCenter(7,'electron life simulator')\n    } else if ( ['I0'].includes(stateName()) ){\n        printCenter(6,'machin presents')\n    } else if ( ['L1'].includes(stateName()) ){\n        \n        printMission(false,true)\n\n    } else if ( ['L2'].includes(stateName()) ){\n        printCenter(7,'404')\n    } else if ( ['W1'].includes(stateName()) ){\n        //        printCenter(6,'sublevel won')\n        printMission(false,false,true)\n    } else if ( ['W2'].includes(stateName()) ){\n        //printCenter(6,'level won')\n        printMission(false,false, false, true )\n    } else if ( ['W3'].includes(stateName()) ){\n        printCenter(5,'You Won It All!')\n        printCenter(7,'Electron Gods are please to meet you.!')\n        printCenter(10,'Thanks for playing!')\n    } else if ( ['S1'].includes(stateName()) ){\n        printMission(true)\n        \n        \n        \n        //printCenter(6,'follow the route')\n        //writeMission(textScreen,undefined,gameState.state.sublevel,gameState.state.choices.directions)\n        \n    } else if ( ['S2'].includes(stateName()) ){\n        printCenter(9,'ready?')\n    } else {\n        //display.textMode.vis = false\n    }\n    //hud()\n    function hud()\n    {\n        textScreen.print(0,14,stateName())\n        let { level, nlevels, sublevel, nsublevels, lives, L } = gameState.state\n        if ( level === undefined ) level = '??'\n        if ( nlevels === undefined ) nlevels = '??'\n        if ( sublevel === undefined ) sublevel = '??'\n        if ( nsublevels === undefined ) nsublevels = '??'\n        if ( lives === undefined ) lives = '??'\n        if ( L === undefined ) L = '??'\n        const s = s => s.toString()\n        textScreen.print(0,15,\n                         `lev:${s(level)}/${s(nlevels)} `\n                         +`sub:${s(sublevel)}/${s(nsublevels)} `\n                         +`lL:${s(lives)}/${s(L)}`)\n        /*\n          textScreen.print(4,15,s(level).toString())\n          textScreen.print(7,15,sublevel.toString())\n          textScreen.print(10,15,\n          ''+lives.toString()\n          +'/'\n          +L.toString()\n          +' lives')*/\n    }\n\n    const { feedbackBuffer } = display\n    \n    if ( stateIsOneOf('S2','S3') ){\n        const a = feedbackBuffer.o.a\n        feedbackBuffer.o.a = Object(_maths_v1_js__WEBPACK_IMPORTED_MODULE_3__[\"clamp\"])(a+1/60/3,0,1)\n    } /*else if ( (['S2'].includes(stateName())) ){\n        feedbackBuffer.o.a = 0.02\n        }*/ else {\n            feedbackBuffer.o.a = 0.05\n        }\n    let cols\n    {\n        /*const slicedur = 200 // ms\n          const disc = 32\n          const f = (Math.floor(T/slicedur)%disc)/disc\n          const tcol = T/1000\n          const s = ( Math.sin(2*Math.PI*T/2000) * 2 ) - 1\n        */\n        if ( stateIsOneOf(mapVisibility) ){\n            let hs = _missions_js__WEBPACK_IMPORTED_MODULE_9__[\"Missions\"][ gameState.state.level ].hs\n            if ( !hs ){\n                hs =  [0,1]\n\n                // REMOVEME\n                console.error('no color for level', gameState.state.level)\n            }\n            cols = Object(_cols_js__WEBPACK_IMPORTED_MODULE_2__[\"Cols\"])(...hs)\n        }\n    }\n    \n    \n//    const elapsed =\n          display.draw( camera, choices, player, particles, timeoutBar, lifeBar, remainingTo, cols )\n  /*  if ( false ){\n        if ( elapsed[ elapsed.length - 1 ] >= 8 ){\n            // console.log(elapsed)\n        } else {\n            // console.log('<8')\n        }\n    }*/\n    //    stats.end()\n\n    //    texts.updateMessage('welcome','BONJOUR')\n}\nconst roller = Object(_roller_js__WEBPACK_IMPORTED_MODULE_5__[\"Roller\"])(step)\ngameState.event('start')\n\n\n\nfunction updateParticles(particles,pmp,targethasCollision,collision,playerEnergy,STATE){\n\n    if ( STATE === 'S3' ){\n        const targetPosition = Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_4__[\"V2\"])()\n        for ( let r = 0 ; r < /*10*/4 ; r++ ){\n            particles.idx = (particles.idx + 1)%particles.els.length\n            const particle = particles.els[ particles.idx ]\n            if ( targethasCollision ){\n                particle.color = [0.5+Math.random()/2,0,0]\n            } else {\n                particle.color = [playerEnergy,Math.random()*playerEnergy,Math.random()*playerEnergy]\n            }\n            if ( targethasCollision ){\n                const { dx, dy } = collision\n                const rang = 2 * Math.PI * Math.random()\n                const rdis = 0.5 + Math.pow(Math.random(),4) * 1\n                targetPosition.x = pmp.x + dx / 2 + Math.cos( rang ) * rdis\n                targetPosition.y = pmp.y + dy / 2 + Math.sin( rang ) * rdis\n                Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_4__[\"lerpV2\"])( particle.position, targetPosition, 0.9, particle.position )\n            } else {                \n                const rang = Math.PI * ( 10 / 12 + 1 / 3 * Math.random() )\n                const rdis = 0.5 + Math.pow(Math.random(),4) * 2.5\n                targetPosition.x = pmp.x + Math.cos( rang ) * rdis\n                targetPosition.y = pmp.y + Math.sin( rang ) * rdis\n                Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_4__[\"lerpV2\"])( particle.position, targetPosition, 0.8, particle.position )\n            }\n        }\n    } else if ( STATE === 'S2' ){\n        const targetPosition = Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_4__[\"V2\"])()\n        for ( let r = 0 ; r < particles.els.length ; r++ ){\n            const particle = particles.els[ r ]\n            Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_4__[\"copyV2\"])( pmp, targetPosition )\n            Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_4__[\"lerpV2\"])( particle.position, targetPosition, 0.3, particle.position )\n        }\n    } else {\n        const targetPosition = Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_4__[\"V2\"])()\n        for ( let r = 0 ; r < particles.els.length ; r++ ){\n            Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_4__[\"copyV2\"])( pmp, targetPosition )\n            const particle = particles.els[ r ]\n            const d = Math.cos( r/10+ Date.now() / 1000 ) * ( 6 + Math.cos( Date.now() / 1000 ) )\n            targetPosition.x += Math.cos( r+Date.now() / 1000 ) * d\n            targetPosition.y += Math.sin( r+Date.now() / 1000 ) * d\n            if ( ['L1','L2'].includes( STATE ) ){\n                particle.color = [0.5+Math.random()/2,\n                                  Object(_maths_v1_js__WEBPACK_IMPORTED_MODULE_3__[\"lerp\"])(Math.random()/4,particle.color[1],0.5),\n                                  Object(_maths_v1_js__WEBPACK_IMPORTED_MODULE_3__[\"lerp\"])(Math.random()/4,particle.color[2],0.5)]\n                //Math.random() * r]\n            } else {\n                particle.color = [Math.random(),Math.cos( r/10),r]\n            }\n            Object(_maths_v2_js__WEBPACK_IMPORTED_MODULE_4__[\"lerpV2\"])( particle.position, targetPosition, 0.1, particle.position )\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./src/index.js?")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "time", function() { return time; });\nfunction time(f){\n    const s = Date.now()\n    f()\n    return ( Date.now() - s ) \n}\n\n\n//# sourceURL=webpack:///./src/debug/measureFunction.js?')}]);